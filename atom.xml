<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vincent Qin | 秦延文</title>
  
  <subtitle>保持你的好奇心</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.vincentqin.tech/"/>
  <updated>2017-10-02T07:11:22.099Z</updated>
  <id>https://www.vincentqin.tech/</id>
  
  <author>
    <name>Vincent Qin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>降维之PCA主成分分析原理</title>
    <link href="https://www.vincentqin.tech/2017/10/02/%E9%99%8D%E7%BB%B4%E4%B9%8BPCA%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90%E5%8E%9F%E7%90%86/"/>
    <id>https://www.vincentqin.tech/2017/10/02/降维之PCA主成分分析原理/</id>
    <published>2017-10-02T05:22:25.000Z</published>
    <updated>2017-10-02T07:11:22.099Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/10/02/降维之PCA主成分分析原理/logo.png" alt="PCA" title="PCA"></center><a id="more"></a><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在许多领域的研究与应用中，往往需要对反映事物的多个变量进行大量的观测，收集大量数据以便进行分析寻找规律。多变量大样本无疑会为研究和应用提供了丰富的信息，但也在一定程度上增加了数据采集的工作量，更重要的是在多数情况下，许多变量之间可能存在相关性，从而增加了问题分析的复杂性，同时对分析带来不便。如果分别对每个指标进行分析，分析往往是孤立的，而不是综合的。盲目减少指标会损失很多信息，容易产生错误的结论。<br>因此需要找到一个合理的方法，在减少需要分析的指标同时，尽量减少原指标包含信息的损失，以达到对所收集数据进行全面分析的目的。由于各变量间存在一定的相关关系，因此有可能用较少的综合指标分别综合存在于各变量中的各类信息。主成分分析与因子分析就属于这类降维的方法。</p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>PCA（Principal Component Analysis）是一种常用的数据分析方法。PCA通过线性变换将原始数据变换为一组各维度线性无关的表示，可用于提取数据的主要特征分量，常用于高维数据的降维。能够对高维数据降维的算法包括：</p><ul><li>LASSO</li><li>主成分分析法</li><li>聚类分析</li><li>小波分析法</li><li>线性判别法</li><li>拉普拉斯特征映射</li></ul><h2 id="降维有什么作用"><a href="#降维有什么作用" class="headerlink" title="降维有什么作用"></a>降维有什么作用</h2><p>降维有什么作用呢？</p><ul><li>数据在低维下更容易处理、更容易使用</li><li>相关特征，特别是重要特征更能在数据中明确的显示出来；如果只有两维或者三维的话，更便于可视化展示</li><li>去除数据噪声</li><li>降低算法开销</li></ul><p>常见的降维算法有主成分分析（principal component analysis,PCA）、因子分析（Factor Analysis）和独立成分分析（Independent Component Analysis，ICA）。</p><center></center><h2 id="优化目标"><a href="#优化目标" class="headerlink" title="优化目标"></a>优化目标</h2><p>将一组N维向量降为K维（K大于0，小于N），其目标是选择K个单位（模为1）正交基，使得原始数据变换到这组基上后，各字段两两间协方差为0，而字段的方差则尽可能大（在正交的约束下，取最大的K个方差）。<br>注意：PCA的变换矩阵是协方差矩阵，K-L变换的变换矩阵可以有很多种（二阶矩阵、协方差矩阵、总类内离散度矩阵等等）。当K-L变换矩阵为协方差矩阵时，等同于PCA。</p><h2 id="PCA原理"><a href="#PCA原理" class="headerlink" title="PCA原理"></a>PCA原理</h2><center><img src="/2017/10/02/降维之PCA主成分分析原理/projection.png" alt="projection.png" title=""></center><p>最大化样本点在基上的投影，使得数据点尽量的分离。令第一主成分的方向是<script type="math/tex">u_1</script>，我们的目标就是将样本点在该方向上的投影最大化，即：</p><script type="math/tex; mode=display">\max \frac{1}{n}\sum_{i=1}^n<u_1,x_i>^2</script><script type="math/tex; mode=display"> \frac{1}{n}\sum_{i=1}^n<u_1,x_i> \rightarrow \frac{1}{n}\sum_{i=1}^n(x_1^Tu_1)^2=\frac{1}{n}\sum_{i=1}^n(x_1^Tu_1)^T(x_1^Tu_1)</script><script type="math/tex; mode=display">=\frac{1}{n}\sum_{i=1}^n(u_1^Tx_1x_1^Tu_1)=\frac{1}{n}u_1^T\left(\sum_{i=1}^nx_1x_1^T\right)u_1=\frac{1}{n}u_1^T\left(XX^T\right)u_1</script><p>其中的<script type="math/tex">X=[x_1,x_2,...,x_n]^T,x_i\in R^{m}</script>。那么优化函数就变成了：</p><script type="math/tex; mode=display">\max u_1^T\left(XX^T\right)u_1</script><p>以上式子是个二次型，可以证明<script type="math/tex">XX^T</script>是半正定矩阵，所以上式必然有最大值。</p><script type="math/tex; mode=display">\max u_1^T\left(XX^T\right)u_1=\max ||X^Tu_1||_2^2</script><h2 id="优化函数"><a href="#优化函数" class="headerlink" title="优化函数"></a>优化函数</h2><script type="math/tex; mode=display">max||Wx||_2</script><script type="math/tex; mode=display">s.t.  W^TW=I</script><p>解释：<strong>最大化方差同时最小化协方差</strong>（PCA本质上是将方差最大的方向作为主要特征，并且在各个正交方向上将数据“离相关”）。最大化方差意味着，使得每个样本点在每个维度上与均值有很大差异，就是说非常有个性，有个性才能分辨出来；同时协方差越小的话表明样本之间的互相影响就非常小，如果协方差是0的话，表示两个字段完全独立。</p><center><img src="/2017/10/02/降维之PCA主成分分析原理/explain.gif" alt="explain.gif" title=""></center><p>寻找协方差矩阵的特征向量和特征值就等价于拟合一条能保留最大方差的直线或主成分。因为特征向量追踪到了主成分的方向，而最大方差和协方差的轴线表明了数据最容易改变的方向。根据上述推导，我们发现达到优化目标就等价于将协方差矩阵对角化：即除对角线外的其它元素化为0，并且在对角线上将特征值按大小从上到下排列。协方差矩阵作为实对称矩阵，其主要性质之一就是可以正交对角化，因此就一定可以分解为特征向量和特征值。</p><h2 id="具体实施步骤"><a href="#具体实施步骤" class="headerlink" title="具体实施步骤"></a>具体实施步骤</h2><p>总结一下PCA的算法步骤，设有<script type="math/tex">m</script>条<script type="math/tex">n</script>维(字段数)数据，我们采用以下步骤对数据降维。</p><ol><li>将原始数据按列组成<script type="math/tex">n</script>行<script type="math/tex">m</script>列矩阵X. (行数代表字段数目，一个字段就是取每个样本的该维度的数值；列数代表样本数目)</li><li>将<script type="math/tex">X</script>的每一行（代表一个属性字段）进行零均值化，即减去这一行的均值</li><li>求出协方差矩阵<script type="math/tex">C=\frac{1}{m}XX^T</script></li><li>求出协方差矩阵的特征值及对应的特征向量</li><li>将特征向量按对应特征值大小从上到下按行排列成矩阵，取前k行组成矩阵P</li><li><script type="math/tex">Y=PX</script>即为降维到k维后的数据</li></ol><h2 id="去均值化的目的"><a href="#去均值化的目的" class="headerlink" title="去均值化的目的"></a>去均值化的目的</h2><p>下面两幅图是数据做中心化（centering）前后的对比，可以看到其实就是一个平移的过程，平移后所有数据的中心是<script type="math/tex">(0,0)</script>.</p><center><img src="/2017/10/02/降维之PCA主成分分析原理/centering_1.jpg" alt="centering_1.jpg" title=""></center><p>在做PCA的时候，我们需要找出矩阵的特征向量，也就是主成分（PC）。比如说找到的第一个特征向量是a = [1, 2]，a在坐标平面上就是从原点出发到点（1，2）的一个向量。如果没有对数据做中心化，那算出来的第一主成分的方向可能就不是一个可以“描述”（或者说“概括”）数据的方向了。还是看图比较清楚。</p><center><img src="/2017/10/02/降维之PCA主成分分析原理/centering_2.jpg" alt="centering_2.jpg" title=""></center><p>黑色线就是第一主成分的方向。只有中心化数据之后，计算得到的方向才能比较好的“概括”原来的数据。</p><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><p>PCA虽可以很好的解除线性相关，但是对于高阶相关性就没有办法了，对于存在高阶相关性的数据，可以考虑Kernel PCA，通过Kernel函数将非线性相关转为线性相关。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="http://blog.codinglabs.org/articles/pca-tutorial.html" target="_blank" rel="external">PCA的数学原理 </a></li><li><a href="http://blog.csdn.net/oldmonkeyyu_s/article/details/45766543" target="_blank" rel="external"> K-L变换和PCA的区别</a></li><li><a href="http://blog.csdn.net/Dark_Scope/article/details/53150883" target="_blank" rel="external">从PCA和SVD的关系拾遗</a></li><li><a href="https://www.zhihu.com/question/37069477/answer/132387124" target="_blank" rel="external">数据什么时候需要做中心化和标准化处理</a></li><li><a href="http://blog.jobbole.com/109015/" target="_blank" rel="external">主成分分析（PCA）原理详解</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/10/02/降维之PCA主成分分析原理/logo.png&quot; alt=&quot;PCA&quot; title=&quot;PCA&quot;&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="机器学习" scheme="https://www.vincentqin.tech/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PCA" scheme="https://www.vincentqin.tech/tags/PCA/"/>
    
      <category term="LDA" scheme="https://www.vincentqin.tech/tags/LDA/"/>
    
      <category term="降维" scheme="https://www.vincentqin.tech/tags/%E9%99%8D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>SIFT和SURF特性提取总结</title>
    <link href="https://www.vincentqin.tech/2017/10/01/SIFT%E5%92%8CSURF%E7%89%B9%E6%80%A7%E6%8F%90%E5%8F%96%E6%80%BB%E7%BB%93/"/>
    <id>https://www.vincentqin.tech/2017/10/01/SIFT和SURF特性提取总结/</id>
    <published>2017-10-01T02:18:01.000Z</published>
    <updated>2017-10-08T14:02:09.131Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/10/01/SIFT和SURF特性提取总结/match_before_v2.png" alt="Lane+One Punch Man" title="Lane+One Punch Man"></center><blockquote><p>SIFT（Scale-invariant feature transform）是一种检测局部特征的算法，该算法通过求一幅图中的特征点（interest points,or corner points）及其有关<strong>scale</strong> 和 <strong>orientation</strong> 的描述子得到特征并进行图像特征点匹配</p></blockquote><a id="more"></a><h2 id="什么是SIFT"><a href="#什么是SIFT" class="headerlink" title="什么是SIFT"></a>什么是SIFT</h2><p>先看看上图利用sift进行匹配的结果：</p><center><img src="/2017/10/01/SIFT和SURF特性提取总结/matches_adjust_contrast.png" alt="Lane+One Punch Man Matches Result" title="Lane+One Punch Man Matches Result"></center><p>这个结果应该可以很好的解释sift的尺度、旋转以及光照不变性。接下来就介绍一下这个神奇的算法的奥义。</p><h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h3><p>SIFT特征具有尺度不变性，旋转不变性，光照不变性。</p><h3 id="实现流程"><a href="#实现流程" class="headerlink" title="实现流程"></a>实现流程</h3><h4 id="构建尺度空间"><a href="#构建尺度空间" class="headerlink" title="构建尺度空间"></a>构建尺度空间</h4><p>尺度空间的目的是模拟图像的多尺度特性。<br><strong>高斯卷积核是实现尺度变换的唯一线性核</strong>，于是 一副二维图像的尺度空间定义为：</p><script type="math/tex; mode=display">L(x,y,\sigma)=G(x,y,\sigma)*I(x,y)</script><p>其中的<script type="math/tex">G(x,y,\sigma)</script>是尺度可以发生变化的高斯函数<script type="math/tex">G(x,y,\sigma)=\frac{1}{2\pi{\sigma}^2}e^{-\frac{x^2+y^2}{2{\sigma}^2}}</script>。<script type="math/tex">(x,y)</script>表示空间坐标，<script type="math/tex">\sigma</script>是尺度系数，描述了图像的模糊程度。<br>为了能够更为有效的提取出特征点，提出了DOG（高斯差分尺度空间）的概念。通过不同尺度下的高斯差分核与图像卷积形成：</p><script type="math/tex; mode=display">D(x,y,\sigma)=(G(x,y,k\sigma)-G(x,y,\sigma))*I(x,y) =L(x,y,k\sigma)-L(x,y,\sigma)</script><center><img src="/2017/10/01/SIFT和SURF特性提取总结/scale_space.png" alt="scale space" title="scale space"></center><p>图像金字塔的建立：为了实现尺度不变特性，对于每一幅图像<script type="math/tex">I(x,y)</script>，分成<strong>子八度（octave）</strong>，第一个子八度的scale为原图大小，后面每个octave为上一个octave降采样的结果，即原图size的1/4（长宽分别减半），构成下一个子八度（高一层金字塔）。此时要强烈注意size和尺度空间的概念。size是图像大小，而尺度空间表示不同<script type="math/tex">\sigma</script>的图像的集合。那么尺度空间的集合是：</p><script type="math/tex; mode=display">2^{i-1}(\sigma, k*\sigma,k^2*\sigma,k^3*\sigma,...,k^{n-1}*\sigma)</script><p>其中的 <script type="math/tex">k=2^{1/S}</script>，<script type="math/tex">S</script>表示尺度金字塔每个octave的层数，<script type="math/tex">n</script>表示尺度金字塔的总层数，<script type="math/tex">i</script>表示的是在某个octave的第<script type="math/tex">i</script>层，<script type="math/tex">i\in[1,2,3,...n]</script>。</p><center><img src="/2017/10/01/SIFT和SURF特性提取总结/DoG.jpg" alt="DoG" title="DoG"></center><p>由图片size决定建几个塔，每塔几层图像(S一般为3-5层)。0塔的第0层是原始图像(或你double后的图像)，往上每一层是对其下一层进行Laplacian变换（高斯卷积，其中σ值渐大，例如可以是σ, k*σ, k*k*σ…），直观上看来越往上图片越模糊。塔间的图片是降采样关系，例如1塔的第0层可以由0塔的第3层down sample得到，然后进行与0塔类似的高斯卷积操作。</p><h4 id="在DoG空间找到关键点"><a href="#在DoG空间找到关键点" class="headerlink" title="在DoG空间找到关键点"></a>在DoG空间找到关键点</h4><p>为了寻找尺度空间的极值点，每一个采样点要和它所有的相邻点比较，看其是否比它的图像域和尺度域的相邻点大或者小。如图所示，中间的检测点和它同尺度的8个相邻点和上下相邻尺度对应的9×2个点共26个点比较，以确保在尺度空间和二维图像空间都检测到极值点。 一个点如果在DOG尺度空间本层以及上下两层的26个领域中是最大或最小值时，就认为该点是图像在该尺度下的一个特征点,如图所示。使用Laplacian of Gaussian能够很好地找到找到图像中的兴趣点，但是需要大量的计算量，所以使用Difference of Gaussian图像的极大极小值近似寻找特征点.DOG算子计算简单，是尺度归一化的LoG算子的近似。</p><center><img src="/2017/10/01/SIFT和SURF特性提取总结/DoG_Space.jpg" alt="DoG Space" title="DoG Space"></center><h4 id="去除不好的点"><a href="#去除不好的点" class="headerlink" title="去除不好的点"></a>去除不好的点</h4><blockquote><p>这一步本质上要去掉DoG局部曲率非常不对称的像素。通过拟和三维二次函数以精确确定关键点的位置和尺度（达到亚像素精度），同时去除低对比度的关键点和不稳定的边缘响应点(因为DoG算子会产生较强的边缘响应)，以增强匹配稳定性、提高抗噪声能力，在这里使用近似Harris Corner检测器。</p></blockquote><h4 id="给特征点赋值一个128维方向参数并描述"><a href="#给特征点赋值一个128维方向参数并描述" class="headerlink" title="给特征点赋值一个128维方向参数并描述"></a>给特征点赋值一个128维方向参数并描述</h4><p>前面的几个步骤确定了特征点到底在哪里，此步骤是为了<strong>描述特征点</strong>。<br>(x,y)处梯度的模值和方向公式为：</p><script type="math/tex; mode=display">m(x,y)=\sqrt{(L(x+1,y)-L(x-1,y))^2+(L(x,y+1)-L(x,y-1))^2}</script><script type="math/tex; mode=display">\theta(x,y)=tan^{-1}\left(\frac{L(x,y+1)-L(x,y-1)}{L(x+1,y)-L(x-1,y)}\right)</script><blockquote><p>利用关键点邻域像素的梯度方向分布特性为每个关键点指定方向参数，使算子具备旋转不变性。</p></blockquote><p>其中L所用的尺度为每个关键点各自所在的尺度。至此，图像的关键点已经检测完毕，每个关键点有三个信息：<strong>位置，所处尺度、方向</strong>，由此可以确定一个SIFT特征区域。</p><p>在实际计算时，我们在以关键点为中心的邻域窗口内采样，并用直方图统计邻域像素的梯度方向。梯度直方图的范围是0～360度，其中每45度一个柱，总共8个柱, 或者每10度一个柱，总共36个柱。Lowe论文中还提到要使用高斯函数对直方图进行平滑，减少突变的影响。直方图的峰值则代表了该关键点处邻域梯度的主方向，即作为该关键点的方向。直方图中的峰值就是主方向，其他的达到最大值80%的方向可作为辅助方向。</p><p>计算keypoint周围的16*16的window中每一个像素的梯度，而且使用高斯下降函数降低远离中心的权重。图左部分的中央为当前关键点的位置，每个小格代表关键点邻域所在尺度空间的一个像素，利用公式求得每个像素的梯度幅值与梯度方向，箭头方向代表该像素的梯度方向，箭头长度代表梯度模值，然后用高斯窗口对其进行加权运算。</p><center><img src="/2017/10/01/SIFT和SURF特性提取总结/keypoints.jpg" alt="keypoints" title="keypoints"></center><p>该图是8*8的区域计算得到2*2描述子向量的过程。但是在实际中使用的是在16*16的区域计算得到4*4的特征描述子，如下图：</p><center><img src="/2017/10/01/SIFT和SURF特性提取总结/descriptor.jpg" alt="descriptor" title="descriptor"></center><p>这样就可以对每个feature形成一个4*4*8=128维的描述子，每一维都可以表示4*4个格子中一个的scale/orientation。将这个<strong>向量归一化之后，就进一步去除了光照的影响</strong>。</p><h3 id="sift的缺点"><a href="#sift的缺点" class="headerlink" title="sift的缺点"></a>sift的缺点</h3><p>SIFT在图像的不变特征提取方面拥有无与伦比的优势，但并不完美，仍然存在：</p><ol><li>实时性不高。</li><li>有时特征点较少。</li><li>对边缘光滑的目标无法准确提取特征点。</li></ol><p>PS: 论文见这里：<a href="http://www.cs.ubc.ca/~lowe/papers/ijcv04.pdf" target="_blank" rel="external">Distinctive Image Features from Scale-Invariant Keypoints</a><br>这里是<a href="http://www.cs.ubc.ca/~lowe/home.html" target="_blank" rel="external">David Lowe大神</a>做的一个<a href="http://www.cs.ubc.ca/~lowe/keypoints/" target="_blank" rel="external">Demo Software: SIFT Keypoint Detector</a>.</p><h2 id="SURF-简介"><a href="#SURF-简介" class="headerlink" title="SURF 简介"></a>SURF 简介</h2><p>参考了好友整理的一篇文章<a href="http://simtalk.cn/2017/08/18/%E7%89%B9%E5%BE%81%E4%B8%8E%E5%8C%B9%E9%85%8D/#ORB" target="_blank" rel="external">特征与匹配</a></p><ol><li>整体的思路就是将计算DOG的一整套东西来检测关键点的理论替换成了利用hessian矩阵来检测关键点，因为当Hessian矩阵的判别式取得局部极大值时，判定当前点是比周围邻域内其他点更亮或更暗的点，由此来定位关键点的位置。<br>上述过程要进行Hessian判别式的计算，可以采用box filter的方式进行加速。</li><li>构建尺度金字塔的方式不同，具体见下图：<center><img src="/2017/10/01/SIFT和SURF特性提取总结/diff.png" alt="differences" title="differences"></center></li><li>Sift特征点方向分配是采用在特征点邻域内统计其梯度直方图，取直方图bin值最大的以及超过最大bin值80%的那些方向作为特征点的主方向。而在Surf中，采用的是统计特征点圆形邻域内的harr小波特征。即在特征点的圆形邻域内，统计60度扇形内所有点的水平、垂直harr小波特征总和，然后扇形以0.2弧度大小的间隔进行旋转并再次统计该区域内harr小波特征值之后，最后将值最大的那个扇形的方向作为该特征点的主方向。该过程示意图如下：<center><img src="/2017/10/01/SIFT和SURF特性提取总结/direction.jpg" alt="direction" title="direction"></center></li><li>生成特征点描述子: 在Sift中，是取特征点周围4*4个区域块，统计每小块内8个梯度方向，用着4*4*8=128维向量作为Sift特征的描述子。surf算法中，也是在特征点周围取一个4*4的矩形区域块，但是所取得矩形区域方向是沿着特征点的主方向。每个子区域统计25个像素的水平方向和垂直方向的haar小波特征，这里的水平和垂直方向都是相对主方向而言的。该haar小波特征为水平方向值之后、垂直方向值之后、水平方向绝对值之后以及垂直方向绝对值之和4个方向。<br>把这4个值作为每个子块区域的特征向量，所以一共有4*4*4=64维向量作为Surf特征的描述子，比Sift特征的描述子减少了2倍。<center><img src="/2017/10/01/SIFT和SURF特性提取总结/diff_more.jpg" alt="more differences" title="more differences"></center></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://blog.csdn.net/abcjennifer/article/details/7639681/" target="_blank" rel="external">SIFT特征提取分析</a></li><li><a href="http://blog.csdn.net/luoshixian099/article/details/47807103" target="_blank" rel="external">特征匹配-SURF原理与源码解析（一）</a></li><li><a href="http://simtalk.cn/2017/08/18/%E7%89%B9%E5%BE%81%E4%B8%8E%E5%8C%B9%E9%85%8D/#ORB" target="_blank" rel="external">特征与匹配</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/10/01/SIFT和SURF特性提取总结/match_before_v2.png&quot; alt=&quot;Lane+One Punch Man&quot; title=&quot;Lane+One Punch Man&quot;&gt;&lt;/center&gt;

&lt;blockquote&gt;
&lt;p&gt;SIFT（Scale-invariant feature transform）是一种检测局部特征的算法，该算法通过求一幅图中的特征点（interest points,or corner points）及其有关&lt;strong&gt;scale&lt;/strong&gt; 和 &lt;strong&gt;orientation&lt;/strong&gt; 的描述子得到特征并进行图像特征点匹配&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="sift" scheme="https://www.vincentqin.tech/tags/sift/"/>
    
      <category term="surf" scheme="https://www.vincentqin.tech/tags/surf/"/>
    
      <category term="特征提取" scheme="https://www.vincentqin.tech/tags/%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>统计学习方法总结</title>
    <link href="https://www.vincentqin.tech/2017/09/23/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>https://www.vincentqin.tech/2017/09/23/统计学习方法总结/</id>
    <published>2017-09-23T11:47:38.000Z</published>
    <updated>2017-09-23T12:36:30.134Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/09/23/统计学习方法总结/cover.jpg" alt="machine learning" title="machine learning"></center><p>本文主要研究监督学习，所谓的监督学习就是在给定的，有限的，用于学习的训练数据集合（training data）出发，假设数据是独立同分布产生的；并且假设要学习的模型属于某个集合，即<strong>假设空间</strong>；我们根据一定的评价准则，从假设空间中选取一个最优的模型，使它对已知的训练数据以及未知的测试数据在给定评价准则下有最优的预测，最优模型的选取由<strong>算法</strong>实现。<br>所以统计学习方法有三个要素：<strong>模型</strong>、<strong>策略</strong>、<strong>算法</strong>。</p><a id="more"></a><h2 id="统计学习"><a href="#统计学习" class="headerlink" title="统计学习"></a>统计学习</h2><ul><li>监督学习</li><li>半监督学习</li><li>无监督学习</li><li>强化学习</li></ul><h2 id="输入空间、特征空间与输出空间"><a href="#输入空间、特征空间与输出空间" class="headerlink" title="输入空间、特征空间与输出空间"></a>输入空间、特征空间与输出空间</h2><ol><li>输入变量&amp;输出变量均连续-&gt; 回归问题</li><li>输出空间为有限个离散变量的预测问题-&gt; 分类问题</li><li>输入与输出均为变量序列的预测问题-&gt; 标注问题</li></ol><h2 id="风险函数"><a href="#风险函数" class="headerlink" title="风险函数"></a>风险函数</h2><ul><li>期望风险：模型关于联合分布的期望损失</li><li>经验风险：模型关于训练样本的平均损失<br>按照大数定律，当样本数据量区域无穷时，经验风险趋近于期望风险；<br>但是当样本容量很小时，经验风险的效果就不会太好，此时容易出现过拟合现象。<br>此时，结构风险就被提出。结构风险是在经验风险的基础上添加上表示模型复杂度的正则化项/罚项。<br>极大似然估计是经验风险最小化的一个特例。<br>最大后验概率估计是结构风险最小化的一个特例；</li></ul><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>监督学习里要学习的模型就是<strong>决策函数或者条件概率分布</strong>。</p><p>此时不得不提到生成方法以及判别方法。</p><ul><li>生成方法，由数据学习联合概率分布$P(X,Y)$，然后求出条件概率分布模型，即生成模型：<script type="math/tex; mode=display">P(Y|X)=\frac{P(X,Y)}{P(X)}</script></li><li>判别方法是由数据直接学习决策函数或者条件概率分布作为预测模型，即判别模型。</li></ul><h3 id="生成模型与判别模型"><a href="#生成模型与判别模型" class="headerlink" title="生成模型与判别模型"></a>生成模型与判别模型</h3><ul><li>生成模型常见的主要有：</li></ul><ol><li>高斯混合模型</li><li>朴素贝叶斯</li><li>混合高斯模型GMM</li><li>隐马尔可夫模型HMM</li><li>马尔可夫的随机场</li><li>KNN</li></ol><ul><li>常见的判别模型有：</li></ul><ol><li>支持向量机</li><li>传统的神经网络</li><li>线性判别分析</li><li>线性回归</li><li>条件随机场</li><li>最大熵模型</li><li>逻辑斯特回归</li></ol><p><img src="https://uploadfiles.nowcoder.com/images/20170902/1124449_1504333555806_99A61EED5E6F79CC20E4E8CFDA6B5AF4" alt=""></p><h2 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h2><p>指定策略的目的就是为了挑选出假设空间中到底哪个模型才是我们真正需要的。此时会用到损失函数以及风险函数的概念。</p><ul><li><p>0-1 损失函数</p><script type="math/tex; mode=display">L(Y,f(X))=\left\{\begin{aligned}1,    && Y \neq f(X)\\0,    &&Y = f(X) \end{aligned}\right.</script></li><li><p>平法损失函数</p><script type="math/tex; mode=display">L(Y,f(X))=(Y-f(X)^2</script></li><li><p>绝对值损失函数</p></li></ul><script type="math/tex; mode=display">L(Y,f(X))=|Y-f(X)|</script><ul><li>对数损失函数<script type="math/tex; mode=display">L(Y,P(Y|X))=-logP(Y|X)</script></li></ul><p>损失函数越小的话代表模型越好。$(X,Y)$是随机变量符合联合分布概率$P(X,Y)$，所以损失函数的期望被定义为：</p><script type="math/tex; mode=display">R_{ref}(f)=E_p[L(Y,f(X))]=\int_{\mathcal{X} \times \mathcal{Y}}L(y,f(x))P(x,y)dxdy</script><p>以上是模型$f(X)$关于联合分布$P(X,Y)$的平均意义下的损失，称为风险函数或者<strong>期望损失</strong>（expected loss）。<br>但是呢，期望损失不易求解，我们一般用<strong>模型关于训练数据集的平均损失</strong>来逼近期望损失，即：</p><script type="math/tex; mode=display">R_{emp}(f)=E_p[L(Y,f(X))]=\frac{1}{N} \sum_{i=1}^NL(y_i,f(x_i))</script><p><strong>经验风险最小化</strong>的策略认为，经验风险最小的模型就是最优的模型，于是按照这种定义，我们有：</p><script type="math/tex; mode=display">f^*={argmin}_{f \in \mathcal{F} } R_{emp}</script><p>其中的$\mathcal{F}$是假设空间。<br>最大似然估计就是经验风险最小化的一个例子：当模型为条件概率，损失函数是对数损失时，经验风险最小化就等价于极大似然估计。<br>根据大数定理可知，当样本容量N趋近于无限时，经验风险趋近于期望风险。但是如果样本数量是有限时，此时会出现过拟合现象，那么这时候需要结构风险的帮助。<br>结构风险是为了防止过拟合而提出的策略，结构风险最小化等价于正则化（regularization）。其定义是</p><script type="math/tex; mode=display">R_{srm}(f)=\frac{1}{N} \sum_{i=1}^NL(y_i,f(x_i))+\lambda J(f)</script><p>其中的$J(f)$是衡量模型复杂度的项，也叫罚项。当模型越复杂时，$J(f)$越大；模型越简单时，$J(f)$越小。<br>最大后验概率估计（MAP）就是结构风险最小化的一个例子：当模型时条件概率，损失函数是对数损失函数，模型复杂度由先验概率表示时，结构风险最小化就等价于MAP。</p><p>监督学习的模型可以分为概率模型与非概率模型，由条件概率分布$P(Y|X)$或者决策函数$Y=f(X)$表示。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>算法是指学习模型的具体计算方法： <strong>find global optimization solution efficiently</strong>.</p><h2 id="模型选择"><a href="#模型选择" class="headerlink" title="模型选择"></a>模型选择</h2><p><strong>模型选择的主要方式有：正则化与交叉验证</strong>。</p><p>在经验风险最小化时已经了解到正则化的由来，正则化就是针对过拟合现象提出的解决策略。</p><p><strong>过拟合</strong>是指学习模型时选择的模型包含的参数过多，以致于这一模型对已知数据的预测很好，而对未知数据的预测能力变得很差。 以下介绍两种正则化的范数：$L_1$ and $L_2$</p><h3 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h3><h4 id="L2范数正则"><a href="#L2范数正则" class="headerlink" title="L2范数正则"></a>L2范数正则</h4><script type="math/tex; mode=display">C=C_0+ \frac{\alpha}{2n}\sum_ww^2</script><p>对$w$以及$b$求导如下：</p><script type="math/tex; mode=display"> \frac{\partial C}{\partial w}= \frac{\partial C_0}{\partial w}+\frac{\lambda}{n}w \frac{\partial C}{\partial b}= \frac{\partial C_0}{\partial b}</script><p>由梯度下降法可知：</p><script type="math/tex; mode=display">w \rightarrow w-\eta\frac{\partial C}{\partial w}=\left(1-\frac{\eta\lambda}{n} \right)w-\eta\frac{\partial C_0}{\partial w}</script><p>系数$\left(1-\frac{\eta\lambda}{n} \right)$是小于1的，相比于原来的系数等于一，此时的效果相当于就是权值衰减（weight decay）。</p><p>注意到<strong>过拟合</strong>的时候，我们的假设函数要顾及到每一个数据点，模型就会尝试对所有数据点进行拟合，包括一些异常点；此时形成的拟合函数的波动性会非常大，可以看到此时的拟合参数会异常大。通过L2正则化处理可以使这些参数变小，解释如下：</p><blockquote><p>更小的权重，表示网络的复杂组更低，对数据拟合的刚刚好（奥卡姆剃须刀原理）</p></blockquote><h4 id="L1范数正则"><a href="#L1范数正则" class="headerlink" title="L1范数正则"></a>L1范数正则</h4><p>L1正则假设参数的先验分布是Laplace分布，可以保证模型的稀疏性，也就是某些参数等于0；<br>L2正则假设参数的先验分布是Gaussian分布，可以保证模型的稳定性，也就是参数的值不会太大或太小</p><p><img src="https://gss0.baidu.com/-fo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/359b033b5bb5c9ea238f2f6cdd39b6003bf3b3c4.jpg" alt="两种正则化的对比"></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="http://freemind.pluskid.org/machine-learning/sparsity-and-some-basics-of-l1-regularization/#ed61992b37932e208ae114be75e42a3e6dc34cb3" target="_blank" rel="external">lasso and ridge regularization</a></p><h3 id="交叉验证"><a href="#交叉验证" class="headerlink" title="交叉验证"></a>交叉验证</h3><p>就是将整个数据集切分成三个部分，分别是训练集、验证集和测试集。训练集用来训练模型，验证集用于模型 的选择，而测试集用于对学习方法的评估。</p><p>但是一般情况下，训练数据是不足的，那么此时可以重复的利用数据，进行反复训练以得到最优模型。</p><p>常见的方法有：</p><ul><li>S折交叉验证（S-fold cross validation）</li><li>留一交叉验证（S=N，当S为数据集的容量时，S折交叉验证就变成了留一交叉验证）</li></ul><h2 id="极大似然估计"><a href="#极大似然估计" class="headerlink" title="极大似然估计"></a>极大似然估计</h2><p>最大似然估计提供了一种给定观察数据来评估模型参数的方法，即：“模型已定，参数未知”</p><blockquote><p>举个别人博客中的例子，假如有一个罐子，里面有黑白两种颜色的球，数目多少不知，两种颜色的比例也不知。我 们想知道罐中白球和黑球的比例，但我们不能把罐中的球全部拿出来数。现在我们可以每次任意从已经摇匀的罐中拿一个球出来，记录球的颜色，然后把拿出来的球 再放回罐中。这个过程可以重复，我们可以用记录的球的颜色来估计罐中黑白球的比例。假如在前面的一百次重复记录中，有七十次是白球，请问罐中白球所占的比例最有可能是多少？很多人马上就有答案了：70%。而其后的理论支撑是什么呢？</p></blockquote><p>我们假设罐中白球的比例是$p$，那么黑球的比例就是$1-p$。因为每抽一个球出来，在记录颜色之后，我们把抽出的球放回了罐中并摇匀，所以每次抽出来的球的颜 色服从同一独立分布。这里我们把一次抽出来球的颜色称为一次抽样。题目中在一百次抽样中，七十次是白球的概率$P(Data|M)$，这里Data是所有的数据，M是所给出的模型，表示每次抽出来的球是白色的概率为$p$。如果第一抽样的结果记为<script type="math/tex">x_1</script>，第二抽样的结果记为<script type="math/tex">x_2</script>… 那么<script type="math/tex">Data = (x_1,x_2,...,x_{100})</script>。这样，</p><script type="math/tex; mode=display">P(Data|M)= P(x_1,x_2,...,x_{100}|M)= P(x_1|M)P(x_2|M)...P(x_{100}|M)= p^{70}(1-p)^{30}</script><p>那么p在取什么值的时候，$P(Data|M)$的值最大呢？将$p^{70}(1-p)^{30}$对$p$求导，并其等于零。</p><script type="math/tex; mode=display">70p^{69}(1-p)^{30}-p^{70}*30(1-p)^{29}=0</script><p>解方程可以得到<script type="math/tex">p=0.7</script>。　　　　</p><h3 id="最大熵原理"><a href="#最大熵原理" class="headerlink" title="最大熵原理"></a>最大熵原理</h3><p>最大熵原理使概率学习中的一个准则。学习概率模型时，在所有的可能概率模型（分布）中，熵最大的模型是最好的模型。最大熵原理也可以理解成在满足约束条件的模型中选择熵最大的模型！</p><script type="math/tex; mode=display">H(p)=-\sum_x{log(P(x))P(x)}</script><p>其中$X$服从的概率分布为$P(X)$，$X$服从均匀分布时，熵最大。当没有其他已知的约束时，$\Sigma{P(x)}=1$，此时按照最大熵原理，当$P(x_1)=P(x_2)=…=P(x_n)$时，熵最大；此时等概论，等概论意味着对事实的无知，因为没有更多可能的信息，所以此时的判断也是合情合理的。</p><h3 id="线性分类器"><a href="#线性分类器" class="headerlink" title="线性分类器"></a>线性分类器</h3><p>线性分类器有三大类：感知器准则函数、$SVM$、$Fisher$准则，而贝叶斯分类器不是线性分类器。</p><ul><li>感知器准则函数：代价函数$J=-(W*X+w_0)$，分类的准则是最小化代价函数。感知器是神经网络（$NN$）的基础，网上有很多介绍。</li><li>$SVM$：支持向量机也是很经典的算法，优化目标是最大化间隔（margin），又称最大间隔分类器，是一种典型的线性分类器。（使用核函数可解决非线性问题）</li><li>$Fisher$准则：更广泛的称呼是线性判别分析（$LDA$），将所有样本投影到一条远点出发的直线，使得同类样本距离尽可能小，不同类样本距离尽可能大，具体为最大化“广义瑞利商”。</li></ul><h3 id="评价指标"><a href="#评价指标" class="headerlink" title="评价指标"></a>评价指标</h3><ul><li>召回率就是有多少正确的被你找回来了；准确率就是你找到的有多少是正确的；(一般情况下召回率和准确率呈负相关，所以可以用F值衡量整体效果)</li><li>TP(True Positive)是你判断为正确的，实际就是正确的；</li><li>FP(False Positive)是你判断是错误的，实际也是错误的；</li><li>TN(True Negative)是你判断为正确的，但实际是错误的；</li><li>FN(False Negative)是你判断是错误的，但实际是正确的；</li></ul><h2 id="朴素贝叶斯-Naive-Bayes"><a href="#朴素贝叶斯-Naive-Bayes" class="headerlink" title="朴素贝叶斯 Naive Bayes"></a>朴素贝叶斯 <script type="math/tex">Naive Bayes</script></h2><h3 id="基本方法"><a href="#基本方法" class="headerlink" title="基本方法"></a>基本方法</h3><p>朴素贝叶斯是基于贝叶斯定理与特征条件独立假设的分类方法。NB的核心在于它假设向量的所有分量之间是独立的。在贝叶斯理论系统中，都有一个重要的条件独立性假设：假设所有特征之间相互独立，这样才能将联合概率拆分。<br>对于由$P(X,Y)$独立产生的训练集$T={(x_1,y_1),(x_2,y_2),…, (x_N,y_N),}$而言通过朴素贝叶斯的方法学习这个联合概率分布。大致分两步：</p><ol><li>计算先验分布：<script type="math/tex; mode=display">P(Y=c_k),k=1,2...,K</script></li><li>条件概率分布：<script type="math/tex; mode=display">P(X=x|Y=c_k)=P(X^{(1)}=x^{(1)},X^{(2)}=x^{(2)},...,X^{(n)}=x^{(n)}|Y=c_k),k=1,2...,K</script>其中的$x \in  R^{n}$，$n$表示这个样本的维度。</li></ol><p>但是在计算条件概率时因为朴素贝叶斯做了条件独立性假设，那么该条件概率分布可以写成：</p><script type="math/tex; mode=display">P(X=x|Y=c_k)=P(X^{(1)}=x^{(1)},X^{(2)}=x^{(2)},...,X^{(n)}=x^{(n)}|Y=c_k)\\=\prod_{j=1}^nP(X^{(j)}=x^{(j)}|Y=c_k)</script><p>在实际分类时，对于给定的输入x，通过学习到的模型估计后验概率$P(Y=c_k|X=x)$将后验概率最大的类作为x的类的输出。</p><script type="math/tex; mode=display">P(Y=c_k|X=x)=\frac{P(X=x|Y=c_k)P(Y=c_k)}{\sum_{k}P(X=x|Y=c_k)P(Y=c_k)}\=\frac{P(Y=c_k)\prod_{j=1}^nP(X^{(j)}=x^{(j)}|Y=c_k)}{\sum_{k}P(Y=c_k)\prod_{j=1}^nP(X^{(j)}=x^{(j)}|Y=c_k)}</script><p>因为分母就是$P(X=x)$的概率，这是不变的。因此我们仅需要知道分子哪个大就可以，也就是：</p><script type="math/tex; mode=display">y={argmax}_{c_k} P(Y=c_k)\prod_{j=1}^nP(X^{(j)}=x^{(j)}|Y=c_k)</script><p>上式的意思是求解到底是哪些类别<script type="math/tex">c_k</script>能够让最大后验概率最大化。</p><h3 id="参数估计"><a href="#参数估计" class="headerlink" title="参数估计"></a>参数估计</h3><h4 id="极大似然估计-1"><a href="#极大似然估计-1" class="headerlink" title="极大似然估计"></a>极大似然估计</h4><ol><li><p>计算先验概率</p><script type="math/tex; mode=display">P(Y=c_k)=\frac{\sum_{i=1}^NI(y_i=c_k)}{N}</script></li><li><p>计算条件概率</p><script type="math/tex; mode=display">P(X=a_{jl}|Y=c_k)=\frac{\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)}{\sum_{i=1}^NI(y_i=c_k)}</script><p>其中</p><script type="math/tex; mode=display">j=1,2...n;l=1,2...S_j;k=1,2...K</script></li><li><p>对于给定的实例x，计算</p><script type="math/tex; mode=display">P(Y=c_k)\prod_{j=1}^nP(X^{(j)}=x^{(j)}|Y=c_k)</script></li><li><p>确定实例的类别</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/09/23/统计学习方法总结/cover.jpg&quot; alt=&quot;machine learning&quot; title=&quot;machine learning&quot;&gt;&lt;/center&gt;

&lt;p&gt;本文主要研究监督学习，所谓的监督学习就是在给定的，有限的，用于学习的训练数据集合（training data）出发，假设数据是独立同分布产生的；并且假设要学习的模型属于某个集合，即&lt;strong&gt;假设空间&lt;/strong&gt;；我们根据一定的评价准则，从假设空间中选取一个最优的模型，使它对已知的训练数据以及未知的测试数据在给定评价准则下有最优的预测，最优模型的选取由&lt;strong&gt;算法&lt;/strong&gt;实现。&lt;br&gt;所以统计学习方法有三个要素：&lt;strong&gt;模型&lt;/strong&gt;、&lt;strong&gt;策略&lt;/strong&gt;、&lt;strong&gt;算法&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="机器学习" scheme="https://www.vincentqin.tech/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学习方法" scheme="https://www.vincentqin.tech/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
      <category term="概率论" scheme="https://www.vincentqin.tech/tags/%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
    
      <category term="SVM" scheme="https://www.vincentqin.tech/tags/SVM/"/>
    
      <category term="过拟合" scheme="https://www.vincentqin.tech/tags/%E8%BF%87%E6%8B%9F%E5%90%88/"/>
    
      <category term="朴素贝叶斯" scheme="https://www.vincentqin.tech/tags/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu上使用Git以及GitHub</title>
    <link href="https://www.vincentqin.tech/2017/05/30/Ubuntu%E4%B8%8A%E4%BD%BF%E7%94%A8Git%E4%BB%A5%E5%8F%8AGitHub/"/>
    <id>https://www.vincentqin.tech/2017/05/30/Ubuntu上使用Git以及GitHub/</id>
    <published>2017-05-30T14:40:20.000Z</published>
    <updated>2017-05-30T15:00:32.622Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/05/30/Ubuntu上使用Git以及GitHub/github.jpg" alt="github" title="github"></center><a id="more"></a><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>在Ubuntu上安装Git的命令为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure><h2 id="配置GitHub"><a href="#配置GitHub" class="headerlink" title="配置GitHub"></a>配置GitHub</h2><p>安装git结束之后就是配置github用户资料，如下：<br>将其中的 “user_name”替换成自己 GitHub的用户名并且将”email_id” 换成你创建GitHub账号所用的邮箱.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;user_name&quot;</div><div class="line"></div><div class="line">git config --global user.email &quot;email_id&quot;</div></pre></td></tr></table></figure></p><h2 id="建立本地仓库（repository）"><a href="#建立本地仓库（repository）" class="headerlink" title="建立本地仓库（repository）"></a>建立本地仓库（repository）</h2><p>在自己的电脑上建立本地仓库，这个仓库将会在后续推送到GitHub上，语句如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init Mytest</div></pre></td></tr></table></figure></p><p>如果初始化成功，你将会得到以下提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Initialized empty Git repository in /home/user_name/Mytest/.git/</div></pre></td></tr></table></figure><p>其中的user_name为本地计算机用户名，因人而异。<br>Mytest是”init”创建的文件夹，然后进入该文件所在目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd Mytest</div></pre></td></tr></table></figure></p><h2 id="创建README来描述这个仓库"><a href="#创建README来描述这个仓库" class="headerlink" title="创建README来描述这个仓库"></a>创建README来描述这个仓库</h2><p>该步骤可有可无，但是作为一个优秀的工程师还是写点东西比较好。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gedit README</div></pre></td></tr></table></figure><p>然后输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">This is a git repo</div></pre></td></tr></table></figure></p><h2 id="将仓库文件加入index（缓存）"><a href="#将仓库文件加入index（缓存）" class="headerlink" title="将仓库文件加入index（缓存）"></a>将仓库文件加入index（缓存）</h2><p>这一步尤其重要，我们将需要上载到GitHub的文件们添加到index。这些文件可以是文本文档，m/c/c++/PDF/jpg…几乎任何类型文件，一般而言我们可以把需要上载的文件拷贝到这个文件夹内，然后再用一个语句来把需要上传到文件添加到index，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git add file1.txt</div><div class="line">git add file2.c</div><div class="line">git and file3.m</div><div class="line">...</div></pre></td></tr></table></figure></p><h2 id="提交到本地仓库"><a href="#提交到本地仓库" class="headerlink" title="提交到本地仓库"></a>提交到本地仓库</h2><p>当我们已经把文件添加／修改到index后，就可以进行提交了；利用如下语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit -m &quot;some_message&quot;</div></pre></td></tr></table></figure><p>其中some_message可以是任何字符，例如：”my first commit” 或者”edit in readme”等。上面代码的-m参数，就是用来指定这个mesage 的。</p><p>注意：git是分为三部分，一部分是文件，另外一个是缓存区，最后一个是本地库。当你修改了自己的文件后，你会git add xx将修改保存到缓存区，然后再用commit推送修改到本地库中。git push 将本地仓库修改推送到服务器上的仓库中commit是将本地修改保存到本地仓库中。</p><h2 id="在GitHub创建仓库"><a href="#在GitHub创建仓库" class="headerlink" title="在GitHub创建仓库"></a>在GitHub创建仓库</h2><p>这个仓库的名字要和本地的一致，该部分不做展开。然后连接到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add origin https://github.com/user_name/Mytest.git</div></pre></td></tr></table></figure><p>其中user_name就是自己的GitHub的用户名。</p><h2 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h2><p>最后的一步就是提交到远程仓库，用以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin master</div></pre></td></tr></table></figure></p><p><a href="https://www.howtoforge.com/tutorial/install-git-and-github-on-ubuntu-14.04/" target="_blank" rel="external">原文地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/05/30/Ubuntu上使用Git以及GitHub/github.jpg&quot; alt=&quot;github&quot; title=&quot;github&quot;&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.vincentqin.tech/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://www.vincentqin.tech/tags/Ubuntu/"/>
    
      <category term="GitHub" scheme="https://www.vincentqin.tech/tags/GitHub/"/>
    
      <category term="Git" scheme="https://www.vincentqin.tech/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>机器学习修炼手册</title>
    <link href="https://www.vincentqin.tech/2017/05/07/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%BF%AE%E7%82%BC%E6%89%8B%E5%86%8C/"/>
    <id>https://www.vincentqin.tech/2017/05/07/机器学习修炼手册/</id>
    <published>2017-05-07T12:02:56.000Z</published>
    <updated>2017-05-08T05:02:23.434Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/05/07/机器学习修炼手册/ML.jpg" alt="机器学习" title="机器学习"></center><p id="div-border-left-green">对机器学习的学习我开始于二年级的《数据挖掘》课，当时袁老师对数据挖掘中的常用的算法做了一些介绍，但是这仅仅是个入门教学，我并没有深入了解的其中的原理。到现在我才深刻的意识到ML的重要性，我就抽空看了一些这方面的资料，整理了这一份文档。</p><a id="more"></a><p>机器学习算法包括，<span id="inline-red">监督学习</span>(回归、分类)以及<span id="inline-red">非监督学习</span>(聚类)。</p><h2 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h2><script type="math/tex; mode=display">\bbox[5px,border:2px solid red]{    \theta_j:=\theta_j-\alpha\frac{\partial}{\partial \theta}J(\theta)}</script><p>其中$\alpha$为学习率一般为很小的数字(0.001-0.1)，$\theta$为我们需要求解的参数，$J(\theta)$为能量函数或者为损失函数，通过上述公式可知，梯度下降是沿着损失函数梯度的反方向寻找迭代寻找最优值的过程。梯度下降容易陷入局部最极小点，所以我们要采取一定的措施来阻止这种现象的发生。</p><h2 id="过拟合（Overfitting）"><a href="#过拟合（Overfitting）" class="headerlink" title="过拟合（Overfitting）"></a>过拟合（Overfitting）</h2><p></p><p id="div-border-left-red">如果训练样本的特征过多，我们学习的假设可能在训练集上表现地很好，但是在验证集上表现地就不尽人意</p><p></p><h3 id="避免过拟合"><a href="#避免过拟合" class="headerlink" title="避免过拟合"></a>避免过拟合</h3><ul><li>减少特征的大小</li><li>正则化<ul><li>在保证所有特征都保留的情况下，限制$\theta$的大小，即Small values for parameters $ \theta_0,\theta_1,\theta_2…\theta_n$</li><li>当特征量很多时，该方式仍然表现的很好</li></ul></li><li>交叉验证(Cross Validation)</li></ul><h3 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h3><h4 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h4><p>对于线性回归而言，其损失函数形式如下：</p><script type="math/tex; mode=display">    J(\theta)=\frac{1}{2m}\sum_{i=1}^{m}\left(h_{\theta}(x^{(i)})-y^{(i)}\right)^2</script><p>引入正则化之后的损失函数的形式为：</p><script type="math/tex; mode=display">    J(\theta)=\frac{1}{2m}\left(\sum_{i=1}^{m}(h_{\theta}(x^{(i)})-y^{(i)})^2+\lambda\sum_{j=1}^{n}\theta_{j}^2\right)</script><h5 id="GD迭代求解参数"><a href="#GD迭代求解参数" class="headerlink" title="GD迭代求解参数"></a>GD迭代求解参数</h5><p><strong>Repeat</strong>{</p><script type="math/tex; mode=display">    \theta_0:=\theta_0-\alpha\frac{1}{m}\sum_{i=1}^{m}\left(h_{\theta}(x^{(i)})-y^{(i)}\right)x_0^{(i)}</script><script type="math/tex; mode=display">    \theta_j:=\theta_j-\alpha\frac{1}{m}\left(\sum_{i=1}^{m}(h_{\theta}(x^{(i)})-y^{(i)})x_j^{(i)}+\lambda\theta_j\right)</script><p>}<br>梯度下降法的学习率$\alpha$需要提前指定，并且还要制定收敛标准。</p><h5 id="Normal-Equation"><a href="#Normal-Equation" class="headerlink" title="Normal Equation"></a>Normal Equation</h5><script type="math/tex; mode=display">\theta=\left(x^Tx+\lambda\begin{bmatrix}{0}&{0}&{\cdots}&{0}\\{0}&{1}&{\cdots}&{0}\\{\vdots}&{\vdots}&{\ddots}&{\vdots}\\{0}&{0}&{\cdots}&{1}\\\end{bmatrix}_{(n+1)(n+1)}\right)^{-1}x^Ty</script><p>上式是对线性回归正则化后的矩阵解。可以证明的是当$\lambda&gt;0$时，求逆符号内部的式子总是可逆的。</p><h4 id="逻辑回归"><a href="#逻辑回归" class="headerlink" title="逻辑回归"></a>逻辑回归</h4><p>在没有加入正则化之前，逻辑回归的损失函数的形式是这样的：</p><script type="math/tex; mode=display">J(\theta)=-\frac{1}{m}\sum_{i=1}^{m}\left(y^{(i)}\log\left(h_{\theta}(x^{(i)})\right)+(1-y^{(i)})\log\left(1-h_{\theta}(x^{(i)})\right)\right)</script><p>加入正则项之后的形式为：</p><script type="math/tex; mode=display">J(\theta)=-\frac{1}{m}\sum_{i=1}^{m}\left(y^{(i)}\log\left(h_{\theta}(x^{(i)})\right)+(1-y^{(i)})\log\left(1-h_{\theta}(x^{(i)})\right)\right)+\frac{\lambda}{2m}\sum_{j=1}^{n}\theta_j^2</script><h5 id="GD迭代求解参数-1"><a href="#GD迭代求解参数-1" class="headerlink" title="GD迭代求解参数"></a>GD迭代求解参数</h5><p><strong>Repeat</strong>{</p><script type="math/tex; mode=display">\theta_0:=\theta_0-\alpha\frac{1}{m}\sum_{i=1}^{m}\left(h_{\theta}(x^{(i)})-y^{(i)}\right)x_0^{(i)}</script><script type="math/tex; mode=display">\theta_j:=\theta_j-\alpha\frac{1}{m}\left(\sum_{i=1}^{m}(h_{\theta}(x^{(i)})-y^{(i)})x_j^{(i)}+\lambda\theta_j\right)</script><p>}</p><h2 id="SVM支持向量机"><a href="#SVM支持向量机" class="headerlink" title="SVM支持向量机"></a>SVM支持向量机</h2><p>支持向量机又被称作最大间距（Large Margin）分类器，损失函数的形式是：</p><script type="math/tex; mode=display">J(\theta)=C\sum_{i=1}^{m}\left(y^{(i)}cost_1\left(h_{\theta}(x^{(i)})\right)+(1-y^{(i)})cost_0\left(h_{\theta}(x^{(i)})\right)\right)+\frac{1}{2}\sum_{j=1}^{n}\theta_j^2</script><p>其中：$h_{\theta}(x^{(i)})=\theta^Tx^{i}$，$cost_1$以及$cost_0$的形式如下图所示：</p><script type="math/tex; mode=display">\begin{cases}\text{we want } \theta^Tx\ge1,  & \text{if $y$ =1} \\[2ex]\text{we want } \theta^Tx\le-1,  & \text{if $y$ =0}\end{cases}</script>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/05/07/机器学习修炼手册/ML.jpg&quot; alt=&quot;机器学习&quot; title=&quot;机器学习&quot;&gt;&lt;/center&gt;

&lt;p id=&quot;div-border-left-green&quot;&gt;对机器学习的学习我开始于二年级的《数据挖掘》课，当时袁老师对数据挖掘中的常用的算法做了一些介绍，但是这仅仅是个入门教学，我并没有深入了解的其中的原理。到现在我才深刻的意识到ML的重要性，我就抽空看了一些这方面的资料，整理了这一份文档。&lt;/p&gt;
    
    </summary>
    
    
      <category term="机器学习" scheme="https://www.vincentqin.tech/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Machine Learning" scheme="https://www.vincentqin.tech/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Linux指令学习笔记</title>
    <link href="https://www.vincentqin.tech/2017/05/06/Linux%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.vincentqin.tech/2017/05/06/Linux指令学习笔记/</id>
    <published>2017-05-06T09:04:20.000Z</published>
    <updated>2017-05-07T04:33:53.630Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/05/06/Linux指令学习笔记/ubuntu2.jpg" alt="Ubuntu" title="Ubuntu"></center><p>今天看了基本的<span id="inline-purple">Linux</span>指令以及<span id="inline-red">makefile</span>的写法，大体总结了一下。<br><a id="more"></a></p><h2 id="常用指令及意义"><a href="#常用指令及意义" class="headerlink" title="常用指令及意义"></a>常用指令及意义</h2><ul><li><strong>root</strong> 表示根目录</li><li><strong>cd</strong> path 切换到path目录， cd / 切换到根目录</li><li><strong>cat</strong> file.txt 查看file.txt中的内容</li><li><strong>pwd</strong>查看当前所在目录</li><li><strong>rmdir</strong>删除目录</li><li><strong>rm</strong> 删除文件</li><li><strong>ls</strong> 列出文件名字， ls -l 列出文件列表</li><li><strong>cp</strong> 复制文件 cp file1.txt file2.txt (复制file1并重命名为file2)</li><li><strong>head</strong> file.txt -n 7 查看file.txt的头7行</li><li><strong>tail</strong> file.txt -n 7 查看file.txt的末尾7行</li><li><strong>wc</strong> file.txt 统计file.txt文件中字符数，返回3个数字：row_size, word_number, character_number; <blockquote><p>-l 统计行数。即 wc -l file.txt<br>-m 统计字符数。这个标志不能与 -c 标志一起使用。<br>-w 统计字数。一个字被定义为由空白、跳格或换行字符分隔的字符串。<br>-L 打印最长行的长度。</p></blockquote></li><li><p><strong>mv</strong> 命令有2中功能</p><ul><li>移动文件夹：mv file.txt file</li><li>修改文件名: mv file1.txt file2.txt</li></ul></li><li><p><strong>chmod</strong> 修改用户权限，有3种用户，分别是：</p></li></ul><div class="table-container"><table><thead><tr><th>解释</th><th>u</th><th>g</th><th>o</th></tr></thead><tbody><tr><td>用户</td><td>user 作者</td><td>group小组</td><td>other其他 </td></tr><tr><td>读写运行</td><td>r w x</td><td>r w x</td><td>r w x </td></tr><tr><td>二进制</td><td>1 0 0</td><td>1 0 0</td><td>1 0 0 </td></tr><tr><td>十进制</td><td>4</td><td>4</td><td>4</td></tr></tbody></table></div><p>假如取消作者的写的权限则：<code>chmod u-w file.txt</code>，其中减号表示“去除”<br>假如添加作者的写的权限则：<code>chmod u+w file.txt</code>，其中减号表示“添加”<br>假如除了作者以外的人都没有读写权限：<code>chmod go-rfile.txt</code><br>同样可以用二进制设置权限 <code>chmod 444 file.txt</code>，表示：u,g,o都只有读的权限。</p><h2 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h2><p>就是将Linux命令集中在一起，组成一个文件，例如有一个test.sh脚本文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ls</div><div class="line">date</div><div class="line">cal</div></pre></td></tr></table></figure></p><ul><li>后缀名 .sh</li><li>运行 sh test.sh</li><li>变量赋值不用加空格, b=1, a=$b</li><li>输出 echo</li><li>字符串写不写双引号一样效果，但是还是推荐写双引号</li><li>大于号 -gt</li><li>小于号 -lt</li><li>等于号 -eq</li><li>大于等于 -ge</li><li>小于等于 -le</li><li>不等于 -ne</li></ul><h3 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ expr ]</div><div class="line"><span class="keyword">then</span></div><div class="line">...</div><div class="line"><span class="keyword">else</span></div><div class="line">...</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> 1 2 3 4 5 6</div><div class="line"><span class="keyword">do</span></div><div class="line"> <span class="built_in">echo</span> <span class="variable">$x</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>例如：arr=(1 2 3 5 6 3 4)<br>注意在运行时候不能继续用sh (1979脚本)；应该改用bash (后期脚本，有数组的时候就用bash)。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">arr=(1 2 5 9 8 6 5 4 3 2)</div><div class="line">max=<span class="variable">$&#123;arr[0]&#125;</span></div><div class="line"><span class="keyword">for</span> i = <span class="variable">$&#123;arr[@]&#125;</span></div><div class="line"><span class="keyword">do</span> </div><div class="line">    <span class="keyword">if</span> [ <span class="variable">$i</span> <span class="_">-gt</span> <span class="variable">$max</span> ]</div><div class="line">    <span class="keyword">then</span> </div><div class="line">        max=<span class="variable">$i</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line"><span class="keyword">done</span></div><div class="line"><span class="built_in">echo</span> max= <span class="variable">$max</span></div></pre></td></tr></table></figure><h2 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h2><ul><li>$USER</li><li>$HOME   可以用 ~ 代替</li><li>环境变量 $PATH,将一个路径加入这个全局变量:<br><code>PATH=$PATH:/home/vincent/tutorial</code> (注意所有的路径都是用冒号间隔开的，)</li></ul><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><ul><li>把几个文件打包成file.zip, <code>zip file.zip *</code> (星号的意思是打包所有的文档)</li><li>把全部的子文件夹都递归打包 <code>zip file.zip -r files/*</code></li><li>利用tar命令： <code>tar -zcvf file.tar.gz files/</code></li></ul><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><ul><li>利用tar命令： <code>tar -zxvf file.tar.gz</code></li></ul><h3 id="下载命令"><a href="#下载命令" class="headerlink" title="下载命令"></a>下载命令</h3><ul><li>wget</li><li>下载后重命名 <code>wget web_address -O file.tar.gz</code> 注意用<code>-O</code></li></ul><h2 id="makefile的写法"><a href="#makefile的写法" class="headerlink" title="makefile的写法"></a>makefile的写法</h2><p>当编译代码的时候，如果有很多子文件，gcc 后面的语句非常长，我们可以选择使用makefile来对其进行处理以加速编译速度并加强可读性。基本的语句是如下所示的格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Target: dependencies</div><div class="line">(tab键) command</div></pre></td></tr></table></figure></p><ul><li>其中Target表示目标，例如最后想把所有的.c .o 文件们打包成main,那么Target就是main</li><li>dependencies表示依赖项们，即所有的.c .h .o</li><li>command为命令即如：gcc test.c -o test</li></ul><p><strong>例如我们想把tool.c 和main.c 打包成main.o的目标文件</strong>, 则makefile的写法为：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">main: main.c tool.o</div><div class="line">    gcc main.c tool.o -o main</div></pre></td></tr></table></figure></p><p>但是我们发现并没有tool.o文件所以，还要把tool.o怎么来的说明一下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tool.o: tool.c</div><div class="line">    gcc -c tool.c</div></pre></td></tr></table></figure></p><p><strong>注意</strong>：<code>gcc -c</code>表示直接把tool.c编译成目标文件tool.o<br>最后呢，如果代码开源的话一般不需要保留.o文件以及main，所以最后还需要把所有的.o以及main文件删除，我们需要在makefile文件的最后添加如下代码：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">clean: </div><div class="line">    rm *.o main</div></pre></td></tr></table></figure></p><p>最后这个makefile可以写成：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">main: main.c tool.o</div><div class="line">    gcc main.c tool.o -o main</div><div class="line">tool.o: tool.c</div><div class="line">    gcc -c tool.c</div><div class="line">clean: </div><div class="line">    rm *.o main</div></pre></td></tr></table></figure></p><p>如果编译器不是gcc，而是其他的编译器，这时候我们有必要做一下代换来提高代码的可移植性。令：CC=gcc， 在引用的时候 $(CC)<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CC=gcc</div><div class="line">main: main.c tool.o</div><div class="line">    $(CC) main.c tool.o -o main</div><div class="line">tool.o: tool.c</div><div class="line">    $(CC) -c tool.c</div><div class="line">clean: </div><div class="line">    rm *.o main</div></pre></td></tr></table></figure></p><p>例如有test1.c，test2.c，它们分别实现了查找最大值和最小值的功能；然后我们把这两个函数的声明分别放在Max.h和Min.h里面，最后我们在主函数main.c里面包含这两个头文件，然后调用这个两个求最大最小值的函数。 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CC=gcc</div><div class="line">main: main.c Max.o Min.o</div><div class="line">    $(CC) main.c Max.o Min.o -o main</div><div class="line">Max.o: <span class="built_in">test</span>1.c</div><div class="line">    $(CC) <span class="built_in">test</span>1.c -o Max</div><div class="line">Min.o: <span class="built_in">test</span>2.c</div><div class="line">    $(CC) <span class="built_in">test</span>2.c -o M<span class="keyword">in</span></div><div class="line">clean: </div><div class="line">    rm *.o main</div></pre></td></tr></table></figure><p>如果还有第三方的库文件，我们如何链接呢？<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">CC=gcc</div><div class="line">CFLAGS=-lm -Wall -g</div><div class="line">main: main.c Max.o Min.o</div><div class="line">    $(CC) $(CFLAGS) main.c Max.o Min.o -o main</div><div class="line">Max.o: <span class="built_in">test</span>1.c</div><div class="line">    $(CC) $(CFLAGS) <span class="built_in">test</span>1.c -o Max</div><div class="line">Min.o: <span class="built_in">test</span>2.c</div><div class="line">    $(CC) $(CFLAGS) <span class="built_in">test</span>2.c -o M<span class="keyword">in</span></div><div class="line">clean: </div><div class="line">    rm *.o main</div></pre></td></tr></table></figure></p><p>未完待续，需要学习的知识太多了，深深地感觉到了自己的无知:(</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/05/06/Linux指令学习笔记/ubuntu2.jpg&quot; alt=&quot;Ubuntu&quot; title=&quot;Ubuntu&quot;&gt;&lt;/center&gt;

&lt;p&gt;今天看了基本的&lt;span id=&quot;inline-purple&quot;&gt;Linux&lt;/span&gt;指令以及&lt;span id=&quot;inline-red&quot;&gt;makefile&lt;/span&gt;的写法，大体总结了一下。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.vincentqin.tech/tags/Linux/"/>
    
      <category term="Shell脚本" scheme="https://www.vincentqin.tech/tags/Shell%E8%84%9A%E6%9C%AC/"/>
    
      <category term="makefile" scheme="https://www.vincentqin.tech/tags/makefile/"/>
    
  </entry>
  
  <entry>
    <title>初试HCI光场数据集</title>
    <link href="https://www.vincentqin.tech/2017/04/30/%E5%88%9D%E8%AF%95HCI%E5%85%89%E5%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
    <id>https://www.vincentqin.tech/2017/04/30/初试HCI光场数据集/</id>
    <published>2017-04-30T06:22:20.000Z</published>
    <updated>2017-05-07T06:58:21.667Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/04/30/初试HCI光场数据集/face.png" alt="帅不帅" title="帅不帅"></center><p id="div-border-left-green"> 好的数据集是做出漂亮实验的必要条件</p><a id="more"></a><p><span id="inline-red">声明</span>：一切理解都是本人观点，如有错误，还望指出。如需转载请与本人联系，谢谢合作！邮箱：<a href="mailto:qin123yw@163.com" target="_blank" rel="external">qin123yw@163.com</a></p><h2 id="Wanner光场数据集"><a href="#Wanner光场数据集" class="headerlink" title="Wanner光场数据集"></a>Wanner光场数据集</h2><p>目前光场数据集有如下几种主流的数据集：</p><ol><li><a href="http://lightfield.stanford.edu/lfs.html" target="_blank" rel="external">斯坦福大学光场数据集</a></li><li>Wanner(HCI)数据集</li><li><a href="http://hci-lightfield.iwr.uni-heidelberg.de/" target="_blank" rel="external">4D Light Field Dataset</a>(Konstanz大学与Heidelberg大学的HCI合作)</li></ol><p>下面对Wanner数据集进行讨论。学习光场的同学应该很熟悉Wanner提供的数据集共有<strong>10</strong>个场景，分别是：</p><ol><li>Buddha</li><li>Buddha2</li><li>Couple</li><li>Cube</li><li>Mona</li><li>Medieval</li><li>Papillon</li><li>StillLife</li><li>Horses</li><li>rx_watch</li></ol><p>其中，1-8为仿真场景，9-10是由Raytrix拍摄的场景。他们的文件后缀为 .h5, 格式是HDF5，这是一种文件组织格式，可以很好的将数据组织在一起，具体不做展开。MATLAB 提供了一系列相应的读取该文件的函数，如：h5disp，hdf5info(新版本用h5info)，hdf5read等函数，如利用h5disp就可以得到HDF5文件的内容信息，如下图：</p><center><img src="/2017/04/30/初试HCI光场数据集/Buddha2Hd5.gif" alt="Buddha2" title="Buddha2"></center><p>以下给出解码HDF5文件得到子孔径图像以及重排图像的代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">input_file       = <span class="string">'Buddha2.h5'</span>; <span class="comment">% file name</span></div><div class="line">input_folder     = <span class="string">''</span>;           <span class="comment">% your datasets folder</span></div><div class="line"></div><div class="line">[pathstr,name,ext] = fileparts([input_folder <span class="string">'/'</span> input_file]);</div><div class="line">file_path=[pathstr,name,ext];</div><div class="line"></div><div class="line">hinfo_data = hdf5info(file_path);</div><div class="line"><span class="keyword">if</span> strcmp(file_path,<span class="string">'Cube'</span>) || strcmp(file_path,<span class="string">'Couple'</span>)</div><div class="line">data = hdf5read(hinfo_data.GroupHierarchy.Datasets(<span class="number">3</span>));</div><div class="line"><span class="keyword">else</span></div><div class="line">data = hdf5read(hinfo_data.GroupHierarchy.Datasets(<span class="number">2</span>));</div><div class="line"><span class="keyword">end</span></div><div class="line">data = <span class="built_in">permute</span>(data, [<span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">5</span> <span class="number">4</span>]);</div><div class="line">data = im2double(data(:, :, :, :, <span class="keyword">end</span>:<span class="number">-1</span>:<span class="number">1</span>));</div><div class="line"><span class="comment">% parameters from input</span></div><div class="line">UV_diameter = <span class="built_in">size</span>(data, <span class="number">4</span>);                   <span class="comment">% angular resolution</span></div><div class="line">UV_radius    = <span class="built_in">floor</span>(UV_diameter/<span class="number">2</span>);           <span class="comment">% half angular resolution</span></div><div class="line">h                  = <span class="built_in">size</span>(data, <span class="number">1</span>);            <span class="comment">% spatial image height</span></div><div class="line">w                  = <span class="built_in">size</span>(data, <span class="number">2</span>);            <span class="comment">% spatial image width</span></div><div class="line">y_size=h;</div><div class="line">x_size=w;</div><div class="line">UV_size=UV_diameter^<span class="number">2</span>;</div><div class="line">LF_y_size   = h * UV_diameter;                 <span class="comment">% total image height</span></div><div class="line">LF_x_size   = w * UV_diameter;                 <span class="comment">% total image width</span></div><div class="line">LF_Remap    = <span class="built_in">reshape</span>(<span class="built_in">permute</span>(data, ...</div><div class="line">   [<span class="number">4</span> <span class="number">1</span> <span class="number">5</span> <span class="number">2</span> <span class="number">3</span>]), [LF_y_size LF_x_size <span class="number">3</span>]); <span class="comment">% the remap image</span></div><div class="line">IM_Pinhole = data(:,:,:,UV_radius+<span class="number">1</span>,UV_radius+<span class="number">1</span>); <span class="comment">% the pinhole image</span></div></pre></td></tr></table></figure><p>经过以上步骤可以得到相应的中心视角图像以及Remap（重排）之后的图像，从而进一步方便接下来的工作，例如基于该数据集的深度图像估计算法估计。</p><h2 id="HCI-4D光场数据集-4D-Light-Field-Benchmark"><a href="#HCI-4D光场数据集-4D-Light-Field-Benchmark" class="headerlink" title="HCI 4D光场数据集(4D Light Field Benchmark)"></a>HCI 4D光场数据集(4D Light Field Benchmark)</h2><p id="div-border-left-red">The 4D Light Field Benchmark was jointly created by the University of Konstanz and the HCI at Heidelberg University.</p><p>上周整理上一篇博客的时候，想再次查看HCI数据集是否更新，结果惊喜地看到它竟然更新了！激动之余，就连夜把数据以及代码下载了下来，看看这个数据集的庐山真面目。</p><h3 id="数据集概况"><a href="#数据集概况" class="headerlink" title="数据集概况"></a>数据集概况</h3><p>这个数据集共有4大类：</p><ul><li>Stratified（4）</li><li>training（4）</li><li>test（4）</li><li>additional（16）<center><img src="/2017/04/30/初试HCI光场数据集/scenes.png" alt="数据集们" title="数据集们"></center></li></ul><p>总结而言这个4D光场数据集提供了如下信息：</p><ul><li>9x9x512x512x3 light fields as individual PNGs（角度分辨率：9×9，空间分辨率：512×512）</li><li>Config files with camera settings and disparity ranges（相机配置文件以及视差范围）</li><li>Per center view (except for the 4 test scenes):（除了测试类外每类的中心视角图像）<ul><li>512×512 and 5120×5120 depth and disparity maps as PFMs（深度图像以及视差图：512×512低分辨率，以及5120×5120高分辨率）</li><li>512×512 and 5120×5120 evaluation masks as PNGs（png格式的评价掩膜：512×512低分辨率，以及5120×5120高分辨率）</li></ul></li><li>16组additional的每个视角的Ground Truth Depth图像（pfm格式）</li></ul><h3 id="数据集下载"><a href="#数据集下载" class="headerlink" title="数据集下载"></a>数据集下载</h3><p>开始下载吧！在<a href="http://hci-lightfield.iwr.uni-heidelberg.de/" target="_blank" rel="external">该页面</a>的<code>get the data</code>处填写自己的邮箱，然后点击<code>request download links</code>。接下来你的邮箱里就会出现这个数据集的下载链接，链接有点多，你可以选择性的下载或者全部下载。方便起见，我把邮件中提供的链接贴在了下面：</p><ul><li><p><a href="http://lightfield-analysis.net/benchmark/downloads/benchmark.zip" target="_blank" rel="external">Benchmark package with the 12 benchmark scenes</a></p></li><li><p><a href="http://lightfield-analysis.net/benchmark/downloads/full_data.zip" target="_blank" rel="external"><strong>Full package with all 28 scenes</strong></a>(这是全部的场景，共28类；注意不包含深度图像)</p></li></ul><ul><li>Packages per category:<ul><li><a href="http://lightfield-analysis.net/benchmark/downloads/stratified.zip" target="_blank" rel="external">stratified</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/test.zip" target="_blank" rel="external">test</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/training.zip" target="_blank" rel="external">training</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/additional.zip" target="_blank" rel="external">additional</a></li></ul></li></ul><ul><li>Stratified scenes:<ul><li><a href="http://lightfield-analysis.net/benchmark/downloads/backgammon.zip" target="_blank" rel="external">backgammon</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/dots.zip" target="_blank" rel="external">dots</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/pyramids.zip" target="_blank" rel="external">pyramids</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/stripes.zip" target="_blank" rel="external">stripes</a></li></ul></li></ul><ul><li>Test scenes:<ul><li><a href="http://lightfield-analysis.net/benchmark/downloads/bedroom.zip" target="_blank" rel="external">bedroom</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/bicycle.zip" target="_blank" rel="external">bicycle</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/herbs.zip" target="_blank" rel="external">herbs</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/origami.zip" target="_blank" rel="external">origami</a></li></ul></li></ul><ul><li>Training scenes:<ul><li><a href="http://lightfield-analysis.net/benchmark/downloads/boxes.zip" target="_blank" rel="external">boxes</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/cotton.zip" target="_blank" rel="external">cotton</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/dino.zip" target="_blank" rel="external">dino</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/sideboard.zip" target="_blank" rel="external">sideboard</a></li></ul></li></ul><ul><li><p>Additional scenes:</p><ul><li><a href="http://lightfield-analysis.net/benchmark/downloads/antinous.zip" target="_blank" rel="external">antinous</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/boardgames.zip" target="_blank" rel="external">boardgames</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/dishes.zip" target="_blank" rel="external">dishes</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/greek.zip" target="_blank" rel="external">greek</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/kitchen.zip" target="_blank" rel="external">kitchen</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/medieval2.zip" target="_blank" rel="external">medieval2</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/museum.zip" target="_blank" rel="external">museum</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/pens.zip" target="_blank" rel="external">pens</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/pillows.zip" target="_blank" rel="external">pillows</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/platonic.zip" target="_blank" rel="external">platonic</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/rosemary.zip" target="_blank" rel="external">rosemary</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/table.zip" target="_blank" rel="external">table</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/tomb.zip" target="_blank" rel="external">tomb</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/tower.zip" target="_blank" rel="external">tower</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/town.zip" target="_blank" rel="external">town</a></li><li><a href="http://lightfield-analysis.net/benchmark/downloads/vinyl.zip" target="_blank" rel="external">vinyl</a></li></ul></li></ul><ul><li><a href="http://lightfield-analysis.net/benchmark/downloads/additional_depth_disp_all_views.zip" target="_blank" rel="external">Depth and disparity maps for all views of the additional scenes</a></li></ul><h3 id="数据集初体验"><a href="#数据集初体验" class="headerlink" title="数据集初体验"></a>数据集初体验</h3><h4 id="测试代码下载"><a href="#测试代码下载" class="headerlink" title="测试代码下载"></a>测试代码下载</h4><p>在其官方给出的<a href="https://github.com/lightfield-analysis/matlab-tools" target="_blank" rel="external">代码页面</a>下载测试程序，下载完毕后将convert*.m以及lib文件夹其放置在与上述数据集同级目录。例如：TEST目录下同时包括：convert.m 以及 lib/， 同样也包含 additional/, stratified/, test/, 以及 training/。</p><h4 id="生成LF-mat"><a href="#生成LF-mat" class="headerlink" title="生成LF.mat"></a>生成LF.mat</h4><ul><li>convertAll. 对于每一个场景都声称一个<code>LF.mat</code>文件</li></ul><p>如果我们仅仅下载了几个场景我们可以利用如下函数得到相应的<code>LF.mat</code></p><ul><li>convertBlenderTo5D(‘FOLDER’)</li></ul><p>这个LF.mat中包含该场景的光场信息诸如：</p><ul><li>光场数据 (LF.LF)</li><li>真实值 (LF.depth/disp_high/lowres)</li><li>评价掩膜（mask）</li><li>中心视角图像</li></ul><p><span id="inline-red">注意</span>：生成LF.mat的过程用到的参数通过加载相应文件夹下parameters.cfg得到，并将其存储在了LF.parameters中；H变换矩阵存储在了LF.H中（可以参考论文<a href="http://www-personal.acfr.usyd.edu.au/ddan1654/PlenCal.pdf" target="_blank" rel="external">“Decoding, Calibration and Rectification for Lenselet-Based Plenoptic Cameras” </a>）；两个平面的距离存储在LF.f, 单位 [mm]； 相机焦距：LF.parameters.intrinsics.focal_length_mm.</p><h4 id="生成点云（Point-Cloud）"><a href="#生成点云（Point-Cloud）" class="headerlink" title="生成点云（Point Cloud）"></a>生成点云（Point Cloud）</h4><p>接下来我以<strong>additional</strong>文件下的<strong><code>antinous</code></strong>为例子展示如何利用深度图像（官方利用视差）与纹理图像生成点云。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">filename=<span class="string">'antinous'</span>;</div><div class="line">addpath(<span class="string">'lib'</span>);</div><div class="line"><span class="comment">% 得到antinous的LF.mat</span></div><div class="line">convertBlenderTo5D([<span class="string">'additional/'</span>,filename])</div><div class="line">load([<span class="string">'additional/'</span>,filename,<span class="string">'/LF.mat'</span>]);</div><div class="line"></div><div class="line">img=LF.LF(<span class="number">5</span>,<span class="number">5</span>,:,:,:); <span class="comment">%中心视角，用于着色</span></div><div class="line">r=img(:,:,<span class="number">1</span>);</div><div class="line">g=img(:,:,<span class="number">2</span>);</div><div class="line">b=img(:,:,<span class="number">3</span>);</div><div class="line"></div><div class="line"><span class="comment">% 深度图读取</span></div><div class="line">d=pfmread([<span class="string">'additional_depth_disp_all_views\',filename,'</span>\gt_disp_lowres_Cam025.pfm<span class="string">']);</span></div><div class="line">d=mat2gray(d);</div><div class="line"></div><div class="line">mkdir(['PointClouds-color/<span class="string">',filename]);建立一个文件夹存储图片</span></div><div class="line"></div><div class="line">[ X,Y,Z ] = getPointcloud(LF,'disp<span class="string">',d);</span></div><div class="line">ptCloud1 = pointCloud([X(:),Y(:),Z(:)],'color<span class="string">',[r(:) g(:) b(:)]);</span></div><div class="line"></div><div class="line">h1=figure(1);</div><div class="line">pcshow(ptCloud1);</div><div class="line"></div><div class="line">axis off</div><div class="line">set(gcf,'color<span class="string">',[1 1 1])</span></div><div class="line">set(gcf,'Position<span class="string">',[800,300,600,600], '</span>color<span class="string">','</span>w<span class="string">')</span></div><div class="line">view(90.6338,  88.5605);</div><div class="line">zoom(1.2)</div></pre></td></tr></table></figure><p>结果如下所示：</p><center><img src="/2017/04/30/初试HCI光场数据集/PCs.gif" alt="点云" title="点云"></center><p><span id="inline-red">注意</span>：生成点云这一步，低版本的MATLAB（如R2014a）由于没有加入相应的函数所以不能够生成点云，高版本（R2016b）可以正常生成。</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/04/30/初试HCI光场数据集/face.png&quot; alt=&quot;帅不帅&quot; title=&quot;帅不帅&quot;&gt;&lt;/center&gt;

&lt;p id=&quot;div-border-left-green&quot;&gt; 好的数据集是做出漂亮实验的必要条件&lt;/p&gt;
    
    </summary>
    
    
      <category term="Light Field" scheme="https://www.vincentqin.tech/tags/Light-Field/"/>
    
      <category term="光场" scheme="https://www.vincentqin.tech/tags/%E5%85%89%E5%9C%BA/"/>
    
      <category term="计算成像" scheme="https://www.vincentqin.tech/tags/%E8%AE%A1%E7%AE%97%E6%88%90%E5%83%8F/"/>
    
      <category term="点云Point Cloud" scheme="https://www.vincentqin.tech/tags/%E7%82%B9%E4%BA%91Point-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>实习季到了，大家又浮躁了起来</title>
    <link href="https://www.vincentqin.tech/2017/04/16/%E5%AE%9E%E4%B9%A0/"/>
    <id>https://www.vincentqin.tech/2017/04/16/实习/</id>
    <published>2017-04-16T12:48:20.000Z</published>
    <updated>2017-05-29T09:05:58.383Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/04/16/实习/intern.jpg" alt="Intern" title="Intern"></center><p id="div-border-left-red">实习季堪比就业季，今年的形势尤其严峻。伴随着忐忑的心情，我迎来了这个不得不面对的时期。</p><a id="more"></a><h1 id="阿里巴巴视觉算法工程师"><a href="#阿里巴巴视觉算法工程师" class="headerlink" title="阿里巴巴视觉算法工程师"></a>阿里巴巴视觉算法工程师</h1><h2 id="算法与视觉部分"><a href="#算法与视觉部分" class="headerlink" title="算法与视觉部分"></a>算法与视觉部分</h2><ul><li>BF，NN的区别</li><li>激活函数的种类</li><li>怎么防止过拟合</li><li>CUDA的内存模型</li><li>HMM是什么</li><li>SVM的优缺点</li><li>SVD分解的过程</li><li>PCA过程</li><li>光流法</li><li>模版匹配SSD与NCC的优缺点</li><li>有哪些形态学操作</li><li>相机畸变的参数到底有哪些</li><li>交叉熵的概念</li><li>Sift与Surf的区别</li><li>由前序遍历与中序遍历求后序遍历</li><li>深度优先遍历可能的顺序</li></ul><p><br></p><h1 id="腾讯基础研究实习生"><a href="#腾讯基础研究实习生" class="headerlink" title="腾讯基础研究实习生"></a>腾讯基础研究实习生</h1><center><img src="/2017/04/16/实习/Tencent.png" alt="Tencent HomePage" title="Tencent HomePage"></center><p id="div-border-left-green"> 上机考试包括很多数学方面的知识，比考研数学简单多了，但是范围很广，我想过了这么久大家都忘记了吧。概率论部分占了不少题目，尤其要注意后验概率以及假设检验的题目。基础研究没有编程题目！</p><h2 id="数学部分"><a href="#数学部分" class="headerlink" title="数学部分"></a>数学部分</h2><ul><li>特征值与特征向量：Ax=λx</li><li>假设检验，第一类错误与第二类错误</li><li>求解偏导数</li><li>切比雪夫不等式</li><li>F分布的性质</li></ul><h2 id="简答部分"><a href="#简答部分" class="headerlink" title="简答部分"></a>简答部分</h2><ul><li>假设检验来确定零件是否符合标准（可以查看概率论的部分例题）</li><li>神经网络以及SVM的对比，优缺点介绍</li><li>根据某项调查研究，来确定某结论的正确性；</li></ul><h2 id="现场面试部分"><a href="#现场面试部分" class="headerlink" title="现场面试部分"></a>现场面试部分</h2><h3 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h3><p>主要包括以下部分：</p><ul><li>自我介绍（1分钟内）</li><li>项目经历（占了60%时间）</li><li>编程题目（反转链表，可参考<strong>《剑指offer》</strong>）</li><li>意向，做工程还是做算法<br>(ps: 被腾讯挂掉了，惨啊)</li></ul><h3 id="一面（数据挖掘）"><a href="#一面（数据挖掘）" class="headerlink" title="一面（数据挖掘）"></a>一面（数据挖掘）</h3><p>猝不及防地又来了一波电话面试，我一脸懵逼的节奏，完全没有准备。我是小白有没有，面试官主要问了以下几个问题：</p><ul><li>解释方差，协方差以及样本方差的概念</li><li>解释过拟合以及过拟合的概念以及预防措施</li><li>解释TCP滑动窗口的概念（这是啥？）</li><li>求超级长数组的中位数</li><li>析构函数是否可以为虚函数（我是C++小白）</li><li>项目介绍</li></ul><p><br></p><h1 id="商汤算法实习生"><a href="#商汤算法实习生" class="headerlink" title="商汤算法实习生"></a>商汤算法实习生</h1><center><img src="/2017/04/16/实习/sensetime.png" alt="sensetime.png" title=""></center><h2 id="在线笔试"><a href="#在线笔试" class="headerlink" title="在线笔试"></a>在线笔试</h2><p id="div-border-left-green"> 本人申请的岗位是见习算法研究员，笔试1个小时，20道选择填空题，3道编程题。时间略紧。涉及面也非常广，数学，智力，概率统计，线代矩阵，图形学，机器学习，神经网络，C++，均有涉及。</p><h3 id="一、选择填空题-部分-："><a href="#一、选择填空题-部分-：" class="headerlink" title="一、选择填空题(部分)："></a>一、选择填空题(部分)：</h3><ol><li><p>S市A，B共有两个区，人口比例为3：5，据历史统计A的犯罪率为0.01%，B区为0.015%，现有一起新案件发生在S市，那么案件发生在A区的可能性有多大?  (概率题，考查贝叶斯公式，牛客网有)</p></li><li><p>A = [1, 2 ; 2, 1]，求A的k次方。(线代，对A进行对角化，求特征值以及特征方程)</p></li><li><p><strong>git</strong>常用命令，克隆到本地是（），提交到仓库区（），取回远程仓库的变化，并与本地分支合并（）,  推送所有分支到远程仓库（），显示有变更的文件（）(答：clone, commit, pull, push, status)</p></li><li><p>表示矩阵需要多少个数字，表示矩阵的投影需要多少个数字?</p></li><li><p>给出先序序列，中序序列，求后序序列。</p></li><li><p>一个关于继承和虚函数问题。</p></li><li><p>掷两个骰子，得到两个数字A,B，设 C = A+B，那么设 C 除以4 的余数为0，1，2，3的概率分别为p0, p1, p2, p3，求它们的大小关系。</p></li><li><p>图片分辨率为512x512，pad = 2, stride = 3, kernel_size = 9, group = 4, 求卷积后输出分辨率大小。</p></li><li><p>一个关于图形自由度的问题。（本人完全没概念，所以题目具体记不清了）</p></li><li><p>以下哪个不能使用迭代器？a) map, b) set, c) queue, d) vector.  (c)</p></li><li><p>有两个样本点，第一个点为正样本,它的特征向量是(0,-1);第二个点为负样本,它的特征向量是(2,3),从这两个样本点组成的训练集构建一个线性SVM分类器的分类面方程是() （<a href="https://www.nowcoder.com/questionTerminal/104e95c6a13d464a86eb6b657cc545c0" target="_blank" rel="external">答案猛击这里</a>）</p></li><li><p>在一个无序数组中，求前k个最小数字，复杂度最小为？</p></li><li><p>根据以下程序：求func(500)的值。(经典问题，相当于求500的二进制中1的个数，《剑指offer》)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">(x)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> countx = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(x)</div><div class="line">    &#123;</div><div class="line">          countx ++;</div><div class="line">          x = x&amp;(x<span class="number">-1</span>);</div><div class="line">     &#125;</div><div class="line">    <span class="keyword">return</span> countx;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>在其他条件不变的前提下，以下哪种做法容易引起机器学习中的过拟合问题（）<br>a) 增加训练集量<br>b) 减少神经网络隐藏层节点数<br>c) 删除稀疏的特征<br>d) SVM算法中使用高斯核/RBF核代替线性核</p></li><li><p>关于vector初始化的一个问题。</p></li><li><p>有4个车站连通情况如下，每辆车每天都会等概率随机从一个车站出发，然后在某个车站呆一夜，第二天再出发。求稳定之后，每个车站的车辆比例。<br><center><img src="/2017/04/16/实习/question.png" alt="question.png" title=""></center><br>( 根据马尔科夫链 平稳分布，π=πP( P为转移概率矩阵)，和π1+π2+π3+π4=1，同时π1=π4, π2 = π3。可以求得2:3:3:2 ）</p></li></ol><h3 id="二、编程题"><a href="#二、编程题" class="headerlink" title="二、编程题:"></a>二、编程题:</h3><ol><li><p>连续子数组的最大和。（leetcode或剑指offer原题）</p></li><li><p>Minimum Window Substring .(leetcode 原题)</p></li></ol><p>特别鸣谢<a href="http://blog.csdn.net/smallplum123/article/details/69938232" target="_blank" rel="external">smallpum123</a>的商汤回忆版！</p><h2 id="现场面试"><a href="#现场面试" class="headerlink" title="现场面试"></a>现场面试</h2><blockquote><p>4月25日，从学校匆匆到了商汤科技进行面试，幸亏提前到了1个小时，要不然就被淋成落汤鸡了。</p></blockquote><p>一共有两个面试官依次面了我，这两名面试官的侧重点不同，第一位是大体了解面试对象，第二位面试官更加具体深入了解面试者。</p><ol><li>第一个面试官简单地聊了一段时间，首先是自我介绍，然后是项目经历，最常用的编程语言（我说的是Matlab），然后又问了我有没有用过Matlab的高级函数（bsxfun、ismember等），其他的没有很深入地讨论项目细节。（20 min）</li><li>接下来就是第二个面试官，还是重复前面的问题，自我介绍，项目经历，不过这次更加具体了。因为我的方向是做一些基于光场相机的深度图像估计研究的，面试官就问了我关于光场相机原理以及深度估计算法细节方面的东西；然后又问了我第二个基于GPU加速的项目，具体是如何加速代码的（该项目偏工程，没有具体展开）。项目的最后又问了我这些工程的代码量有多大，多少行的样子（我说最少得两、三千行吧）。</li><li>最后就是编程题目，面试官问我关于商汤在线评测代码书写的问题，我的回答是：对于<strong>连续子数组的最大和问题</strong>仅仅写了思路，没有写全代码。然后就是让我现场手写代码了，大概修改了4遍的样子，终于“调试”（所谓调试就是，现场测试代码一步一步写出结果）成功。（60 min）</li><li>当然，面试的最后通常面试官都会问面试者想要了解公司的事情，我就如实将我想要知道的事情想他请假了一下下，然后就没有然后了…</li></ol><p>经过大概一个半小时，面试结束。无论结果如何，我的心情瞬间轻松许多。还是静候佳音吧~</p><h2 id="电话面试"><a href="#电话面试" class="headerlink" title="电话面试"></a>电话面试</h2><p>由香港那边的负责人对我进行了远程电话面试，主要包括自我介绍以及项目介绍，重点在项目介绍上面。Ps：当时电话那头是两位面试官听着我的陈述，我竟然浑然不知。就这样过了40分钟，结束。等待的时间最为忐忑，我觉得自己表现平平，不知道给面试官留下了什么印象。</p><h2 id="顺利通过"><a href="#顺利通过" class="headerlink" title="顺利通过"></a>顺利通过</h2><p>经过一个漫长的劳动节并时逢校庆的假期，5月6号的下午收到了HR打来的电话，成功通过面试，现在心情还是特别激动。</p><p><br></p><h1 id="搜狐图像处理实习生"><a href="#搜狐图像处理实习生" class="headerlink" title="搜狐图像处理实习生"></a>搜狐图像处理实习生</h1><center><img src="/2017/04/16/实习/qf56.png" alt="千帆直播" title="千帆直播"></center><p>初选简历过关之后进行面试。</p><h2 id="笔试（60min）"><a href="#笔试（60min）" class="headerlink" title="笔试（60min）"></a>笔试（60min）</h2><p>根据应聘的实习岗做不同的题目，因为我面的是千帆直播下的图像处理岗位，所以我的题目中有很多关于这方面的相关知识。以下是我的会议版本：</p><ol><li>do while 和while do 的区别</li><li>char const *p 与char * const p 的区别(答：p都是指向const char类型的指针, 不可以赋值给*p, 就是不可通过这个指针改变它指向的值; 第二个: char * const p是指向char的常指针, 指针需在声明时就初始化, 之后不可以改变它的指向)</li><li>创建并且初始化一个双向链表</li><li>代码实现二分查找</li><li>对一个WAV格式的文件头用适当的数据结构进行表示</li><li>队列与栈的区别，分别以什么数据结构表示</li><li>常见的视频压缩方法，视频格式，音频格式</li><li>汇编语言和C/C++混合编程有哪些方法</li><li>如何引用一个已经定义好的全局变量，并比较异同</li><li>gdb如何调试线程，多线程呢（ps:我根本不会这个题目）</li><li>解释“熵”的概念（答：熵，热力学中表征物质状态的参量之一，用符号S表示，其物理意义是体系混乱程度的度量。信息熵表示信息的丰富程度，定义为E=-plog(p)）</li><li>请解释1080p的含义（答：1080指的是分辨率1920*1080，p为扫描方式：逐行扫描）</li><li>请解释FPS的全称以及含义（答：Frames Per Second，帧率的意思）</li><li>解释“码率”的概念（答：即比特率，一秒钟处理的数据量大小，影响到视频的质量以及帧率）</li><li>MPEG标准中有哪些帧类型</li><li>有以下数据结构，请问最后输出结果的是？（注意共用体的大小）<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">union</span>&#123;</div><div class="line">    <span class="keyword">long</span> i;</div><div class="line">    <span class="keyword">int</span> j[<span class="number">3</span>];</div><div class="line">    <span class="keyword">char</span> k;</div><div class="line">&#125;DATA;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> data&#123;</div><div class="line">    <span class="keyword">int</span> m;</div><div class="line">    DATA n;</div><div class="line">    <span class="keyword">double</span> q;</div><div class="line">&#125;;</div><div class="line">data max;</div><div class="line"><span class="built_in">printf</span>(<span class="string">"%d/n"</span>,&amp;(<span class="keyword">sizeof</span>(DATA)+<span class="keyword">sizeof</span>(max));</div></pre></td></tr></table></figure></li></ol><p>还有其他的题目，记不太清了，但是主要就是以上的。难度适中，即有涉及到程序也有图像以及视频处理的相关知识。因为当时没有好好准备，猝不及防的给我了这些题目，感觉一脸懵逼。</p><h2 id="现场面试-1"><a href="#现场面试-1" class="headerlink" title="现场面试"></a>现场面试</h2><p>面试小哥很nice，人很好。首先是自我介绍，然后就是项目经历。基本上简历上的内容问了一遍，感觉还不错。问了我如果调试正在进行中的程序，如何用markdown语言引用代码，对Latex的了解等等。小哥面试结束后，以为女面试官姐姐再次对我的一些基本情况进行了询问，最后还送了一个可爱的小狐狸。<br>无论结果如何等结果吧，祝我好运！<br>ps：很幸运地被录为实习生，但是还是选择了商汤。</p><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="600" height="86" src="http://music.163.com/outchain/player?type=2&id=579954&auto=0&height=66"></iframe></center>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/04/16/实习/intern.jpg&quot; alt=&quot;Intern&quot; title=&quot;Intern&quot;&gt;&lt;/center&gt;

&lt;p id=&quot;div-border-left-red&quot;&gt;实习季堪比就业季，今年的形势尤其严峻。伴随着忐忑的心情，我迎来了这个不得不面对的时期。&lt;/p&gt;
    
    </summary>
    
    
      <category term="实习" scheme="https://www.vincentqin.tech/tags/%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="腾讯基础研究" scheme="https://www.vincentqin.tech/tags/%E8%85%BE%E8%AE%AF%E5%9F%BA%E7%A1%80%E7%A0%94%E7%A9%B6/"/>
    
      <category term="阿里巴巴视觉算法" scheme="https://www.vincentqin.tech/tags/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E8%A7%86%E8%A7%89%E7%AE%97%E6%B3%95/"/>
    
      <category term="商汤科技" scheme="https://www.vincentqin.tech/tags/%E5%95%86%E6%B1%A4%E7%A7%91%E6%8A%80/"/>
    
  </entry>
  
  <entry>
    <title>中国计算机学会推荐国际会议及期刊目录</title>
    <link href="https://www.vincentqin.tech/2017/04/11/%E4%B8%AD%E5%9B%BD%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%BC%9A%E6%8E%A8%E8%8D%90%E5%9B%BD%E9%99%85%E4%BC%9A%E8%AE%AE%E5%8F%8A%E6%9C%9F%E5%88%8A%E7%9B%AE%E5%BD%95/"/>
    <id>https://www.vincentqin.tech/2017/04/11/中国计算机学会推荐国际会议及期刊目录/</id>
    <published>2017-04-11T12:26:12.000Z</published>
    <updated>2017-05-04T07:53:15.644Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/04/11/中国计算机学会推荐国际会议及期刊目录/1.jpg" alt="1.jpg" title=""><a id="more"></a><center><a href="/2017/04/11/中国计算机学会推荐国际会议及期刊目录/CCF会议列表.pdf" title="CCF会议列表">CCF会议列表</a></center><p>顺便听首歌吧嘿嘿~</p><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="500" height="86" src="http://music.163.com/outchain/player?type=2&id=29722263&auto=1&height=66"></iframe></center>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2017/04/11/中国计算机学会推荐国际会议及期刊目录/1.jpg&quot; alt=&quot;1.jpg&quot; title=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="CCF国际会议" scheme="https://www.vincentqin.tech/tags/CCF%E5%9B%BD%E9%99%85%E4%BC%9A%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>日本与美国之行</title>
    <link href="https://www.vincentqin.tech/2017/03/19/%E6%97%A5%E6%9C%AC%E4%B8%8E%E7%BE%8E%E5%9B%BD%E4%B9%8B%E8%A1%8C/"/>
    <id>https://www.vincentqin.tech/2017/03/19/日本与美国之行/</id>
    <published>2017-03-18T16:15:16.000Z</published>
    <updated>2017-04-23T03:35:34.543Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/03/19/日本与美国之行/香港机场起飞.JPG" alt="HongKong Airport" title="HongKong Airport"></center><a id="more"></a><blockquote class="blockquote-center"> 日本国之行 </blockquote><br>小时候因为极其喜欢动漫的缘故，我喜欢上了日本，从那时起已经向往能够进行一次日本之行。2017年1月8日早上的闹钟比以往想得更加早些。迎着黎明前第一缕阳光的到来，我们来到了香港机场。即将开始人生第一次出国高校访问之旅，我心情相当激动。<center><img src="/2017/03/19/日本与美国之行/日本成田机场.JPG" alt="Narita Airport" title="Narita Airport"></center><p>飞机经历两个小时到达日本，偌大的东京比深圳多了一份凉意。拖着行李坐着日本地铁匆匆来到了池袋的旅馆，安顿下来，第一天就这样结束。接下来的几天我们团队依次到了东京、京都、奈良等地，参观日本几所具有代表性的大学，体验日本的文化以及感受日本的风土人情。</p><center><img src="/2017/03/19/日本与美国之行/明治神宫.jpg" alt="明治神宫一隅" title="明治神宫一隅"></center><p>初来乍到，凛冬已至，虽寒意袭来，但心中激动之情让我变得火热。日本之行我们团队参观了5所大学（早稻田大学，东京大学，法政大学，京都大学，秋田大学）以及1个科研院所（NHK科技研究实验室）。</p><center><img src="/2017/03/19/日本与美国之行/早稻田大学.jpg" alt="早稻田大学" title="早稻田大学"></center><center><img src="/2017/03/19/日本与美国之行/东京大学_2.jpg" alt="东京大学" title="东京大学"></center><center><img src="/2017/03/19/日本与美国之行/京都大学_1.jpg" alt="京都大学(雪后之貌)" title="京都大学(雪后之貌)"></center><center><img src="/2017/03/19/日本与美国之行/京都大学_3.jpg" alt="京都大学偶遇‘进击的巨人’" title="京都大学偶遇‘进击的巨人’"></center><center><img src="/2017/03/19/日本与美国之行/政法大学.jpg" alt="去往法政大学的路上" title="去往法政大学的路上"></center><center></center><center><img src="/2017/03/19/日本与美国之行/NHK.jpg" alt="NHK" title="NHK"></center><p>日本同学介绍的科研内容并非高大上的东西，有些只是利用现有的算法来解决现实问题；但是他们做出的东西都是系统化的，最终的结果是以实物或者可视化的形式作为展示。具体而言，对于早稻田大学3个机器人实验室，他们的研究方向更加贴近于实际生活，而并非空谈理论，关注于“人”本身，而并非突发奇想。一位早稻田大学的师兄提到，他们的研究成果必须最终以Demo的形式展示，相比之下，国内科研更加注重仿真，如若计算机仿真能够成功的实现预期目标算是大功告成，省去了硬件实现或者可视化展示这一步。这对于该领域内的科研人员而言是及其容易理解的，但是对于大众而言，大都不能够理解算法的原理以及实现细节，他们关注的是研究的目的以及能够解决的问题。因此如何以一种通俗易懂的方式向大众介绍自己的研究内容成为了一个问题，日本高校相比国内高校在科研成果展示方面具有一定的领先。</p><center><img src="/2017/03/19/日本与美国之行/秋田大学-1.jpg" alt="秋田大学" title="秋田大学"></center><center></center><p>值得注意的是，最后一站的秋田大学与以前的几个大学有着明显差异，它位于日本的北端，抵达时正值秋田几十年来最大的一场雪，这场大雪增加了参观秋田大学的乐趣。起初，我们对于这个农业科学见长的高校知之甚少。通过对其参观，我了解到了这个新兴高校的发展历史以及现有科研水平，秋田大学如何在这十几年时间内迅速成长必然值得我国高校学习。</p><center><img src="/2017/03/19/日本与美国之行/奈良的鹿.jpg" alt="奈良的鹿，我拍的这个可爱鹿是全场最佳~" title="奈良的鹿，我拍的这个可爱鹿是全场最佳~"></center><p>总结而言，东京大学与京都大学历史悠久，科研气氛浓厚且资源丰厚；早稻田大学注重实践，校企合作成为常态；政法大学兼容并包，面向世界；秋田大学后起之秀，努力吸收优秀资源。尽管参观时间有限，但是我们能够明显的感觉到日方高校对于我们来访的热情，同时也可以了解到日本最有代表性大学的科研水平。最大的收获在于，亲身感受到了跨文化交流。我们用英文与日本同学交流，语言不再是最大的障碍。保持好奇心一直是我的座右铭，尽管研究领域不尽一致，但我会努力的提出自己的疑问并聆听日本同学的讲解。起初时候会担心自己不能够很好的提出疑问或者不能够听懂他们的回答，但是主动尝试之后会发现，自己所担心的问题并不存在，同时我也逐渐喜欢上了与他们之间的交流的过程。</p><blockquote><p>京都游玩的地方很多，交流之余，游遍几个好玩的地方</p></blockquote><center><img src="/2017/03/19/日本与美国之行/京都街头.jpg" alt="京都街头" title="京都街头"></center><center><img src="/2017/03/19/日本与美国之行/稻荷大社.jpg" alt="京都伏见稻荷大社" title="京都伏见稻荷大社"></center><center><img src="/2017/03/19/日本与美国之行/京都_1.jpg" alt="京都清水寺求姻缘之地" title="京都清水寺求姻缘之地"></center><center><img src="/2017/03/19/日本与美国之行/京都_2.jpg" alt="京都清水寺远眺" title="京都清水寺远眺"></center><center><img src="/2017/03/19/日本与美国之行/京都_3.jpg" alt="京都清水寺一隅" title="京都清水寺一隅"></center><p>此外，很早就听说日本民众素质很高，这次真切的感受到了。值得注意的是，他们在日常生活中表现出的礼貌也值得人敬佩，这很符合日本人不愿给别人添麻烦的特点。他们时常把“すみませ”挂在嘴边，比如进电梯时，进入餐厅时或者超市付款时；无论多赶时间也会排队，另外在公共场合他们不会大声喧哗，具体而言在地铁上无论人再多再挤，车厢内也是安静的让人感觉不可思议；他们的房屋建设的很低，密密麻麻的挤在一起，电线在房屋之间穿梭，但是让人感觉并不杂乱，“规矩”一词用在他们身上并不为过。同时日本对于古老传统的保留非常重视，以前就听说日本是保留中国古文化最好的非华人国家。果然，“相扑，茶道，和服，空手道”等诸多优良文化在日本保留的相当好，在日剧以及日本民族产业动画中都有很好体现。改革开放以来，我国的经济实力突飞猛进，如今已经跃居世界第二大经济体，但是国际上的文化软实力远远不如日本。很多欧美人士所了解的很多“日本传统”实际是源于中国，日本在国际上的形象是优于中国的。“择其善者而从之”，我认为国内的道德建设以及文化建设必须同经济发展相协调，提高全民素质，打造真正属于中国的国际形象。</p><center><img src="/2017/03/19/日本与美国之行/雪_1.jpg" alt="大阪上空" title="大阪上空"></center><center><img src="/2017/03/19/日本与美国之行/东京远望富士山.jpg" alt="从东京远望富士山，似乎很近，但是有几个小时的车程" title="从东京远望富士山，似乎很近，但是有几个小时的车程"></center><p><blockquote class="blockquote-center"> 美利坚合众国之行 </blockquote><br><br><br>To be continued…<br>先上图，占个坑</p><center><img src="/2017/03/19/日本与美国之行/新奥尔良法国区一隅.jpg" alt="新奥尔良法国区一隅" title="新奥尔良法国区一隅"></center><center><img src="/2017/03/19/日本与美国之行/教堂一隅.jpg" alt="教堂" title="教堂"></center><center><img src="/2017/03/19/日本与美国之行/杜兰大学军事学院.jpg" alt="杜兰大学军事学院" title="杜兰大学军事学院"></center><center><img src="/2017/03/19/日本与美国之行/杜兰大学.jpg" alt="杜兰大学一隅" title="杜兰大学一隅"></center><center><img src="/2017/03/19/日本与美国之行/杰克逊广场一隅.jpg" alt="杰克逊广场一隅" title="杰克逊广场一隅"></center>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/03/19/日本与美国之行/香港机场起飞.JPG&quot; alt=&quot;HongKong Airport&quot; title=&quot;HongKong Airport&quot;&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="美国" scheme="https://www.vincentqin.tech/tags/%E7%BE%8E%E5%9B%BD/"/>
    
      <category term="日本" scheme="https://www.vincentqin.tech/tags/%E6%97%A5%E6%9C%AC/"/>
    
      <category term="东京大学" scheme="https://www.vincentqin.tech/tags/%E4%B8%9C%E4%BA%AC%E5%A4%A7%E5%AD%A6/"/>
    
      <category term="早稻田大学" scheme="https://www.vincentqin.tech/tags/%E6%97%A9%E7%A8%BB%E7%94%B0%E5%A4%A7%E5%AD%A6/"/>
    
      <category term="法政大学" scheme="https://www.vincentqin.tech/tags/%E6%B3%95%E6%94%BF%E5%A4%A7%E5%AD%A6/"/>
    
      <category term="京都大学" scheme="https://www.vincentqin.tech/tags/%E4%BA%AC%E9%83%BD%E5%A4%A7%E5%AD%A6/"/>
    
      <category term="秋田大学" scheme="https://www.vincentqin.tech/tags/%E7%A7%8B%E7%94%B0%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Light Field 光场以及MATLAB光场工具包(LightField ToolBox)的使用说明</title>
    <link href="https://www.vincentqin.tech/2017/02/16/LightField%E5%85%89%E5%9C%BA/"/>
    <id>https://www.vincentqin.tech/2017/02/16/LightField光场/</id>
    <published>2017-02-16T02:45:54.000Z</published>
    <updated>2017-04-14T14:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2017/02/16/LightField光场/lf_cover.jpg" alt="Magic Leap" title="Magic Leap"></center><p>这里我汇总了有关光场（Light Field）一些有用的链接以及光场数据的处理过程。目前还在整理中，随时更新。<br><span id="inline-red">声明</span>：一切理解都是本人观点，如有错误，还望指出。如需转载请与本人联系，谢谢合作！邮箱：<a href="mailto:qin123yw@163.com" target="_blank" rel="external">qin123yw@163.com</a></p><a id="more"></a><h2 id="关于光场常用的链接"><a href="#关于光场常用的链接" class="headerlink" title="关于光场常用的链接"></a>关于光场常用的链接</h2><ul><li><a href="http://lightfield.stanford.edu/lfs.html" target="_blank" rel="external">斯坦福大学光场数据库</a>：老牌斯坦福大学计算机图形实验室(Computer Graphics Laboratory)提供的，该数据库所在网站还提供了光场的采集设备，相机标定以及可视化工具。</li><li>斯坦福大学计算机图形实验室的<a href="http://graphics.stanford.edu/~levoy/" target="_blank" rel="external">Marc Levoy</a>教授做的动画仿真，利于理解。<a href="https://graphics.stanford.edu/courses/cs178/applets/applets.html" target="_blank" rel="external">Flash applets on some technical aspects of photography</a>，这里面详细地介绍了相机的各种参数变化对应的光路图的变化，强烈推荐。</li><li><a href="http://hci-lightfield.iwr.uni-heidelberg.de/" target="_blank" rel="external">HCI光场数据集</a>，千呼万唤始出来，有好长一段时间这个数据集突然消失了（可能是在维护数据）。如今以新的面貌重现天日，真的让人喜出望外。对于其数据集，HCI提供的<a href="https://github.com/lightfield-analysis/matlab-tools" target="_blank" rel="external">解码工具</a>；这是要建立与<a href="#Middlebury">Middlebury</a>齐名的数据集（包括评价排名）的节奏啊！（ps:日后整理，很感兴趣）</li><li><a href="http://cseweb.ucsd.edu/~ravir/" target="_blank" rel="external"><strong>Ravi Ramamoorthi</strong></a>教授主页，一位计算成像，计算机视觉领域的大神，他所在组发表了很多高质量的文章，详情可参考他的主页。</li><li><a href="http://cseweb.ucsd.edu/~viscomp/projects/LF/" target="_blank" rel="external">光场实验室网站</a>，研究光场领域，隶属于<strong>Ravi Ramamoorthi</strong>教授。这里将是研究光场领域深度图像获取，三维重建以及去除高光等领域研究者的福音。</li><li>光场相机的缔造者以及Lytro公司的创始人<a href="http://www.eecs.berkeley.edu/Faculty/Homepages/yirenng.html/" target="_blank" rel="external">Ren Ng</a>。看这里是其创建的<a href="https://illum.lytro.com" target="_blank" rel="external">Lytro公司</a>的主页；最初Lytro的最大卖点在于<strong>先拍照后对焦</strong>，可是买账的人并不多；购买者多数是摄影爱好者以及科研机构。最近Lytro公司开始进军VR以及AR领域，看了下其设备，怎一个大字了得（Ps: 话说Ng为何去教书了？）</li><li><a href="http://blog.lytro.com/" target="_blank" rel="external">Lytro论坛</a>，这里有关于Lytro公司以及光场相机最新的应用，时常关注不至于落后于时代，不至于被世界残忍的抛弃。</li><li>MATLAB<a href="http://www.mathworks.com/matlabcentral/fileexchange/49683-light-field-toolbox-v0-4" target="_blank" rel="external">光场工具包</a>，这个工具包从事光场研究的科研人员的福利，后文中我将详细的介绍这个工具包的使用方法。</li><li><a href="http://optics.miloush.net/lytro/Default.aspx" target="_blank" rel="external"><strong>LytroMeltdown</strong></a>，一位布拉格大学(Charles University)的学生拆解Lytro 1.0的资料，如果你想对光场相机的内部结构有更加深入的了解的话，这个网址有丰富的介绍。（目前仅有Lytro一代的拆解并没有ILLUM的拆解，原因是过于昂贵，作者买不起）</li><li>cocolib<a href="http://sourceforge.net/p/cocolib/home/Home/" target="_blank" rel="external">光场工具套件</a>，这个套件实际上是一个处理凸优化问题的库，既可以用命令行操作也可Matlab界面操作。该库实现了目前集中常用的算法诸如： inverse problems，基于总变分最小化的图像分割以及矢量多标记交易成本函数；当然最重要的还有对于光场图像的分析函数套件（基于HCI发表的深度估计论文）。</li><li>著名的<a href="http://vision.middlebury.edu/stereo/" target="_blank" rel="external">Middlebury</a><span id="Middlebury">数据集</span>：来提供了Benchmark(左右视角的纹理图以及对应的GT深度图像)，各种算法的性能对比， 在双目深度估计领域属于最为权威的评估标准。</li><li>Deep learning: <a href="https://github.com/iro-cp/FCRN-DepthPrediction" target="_blank" rel="external">Depth Estimation</a>，目前基于双目，多目以及利用光场进行深度估计的算法已有很多；有些研究者利用当前比较火热的深度学习的策略对<strong>单幅图像</strong>进行深度图像的提取；我本来想跑跑人家代码，可以目前还没时间搞这些。</li><li><a href="http://cvlab.epfl.ch/" target="_blank" rel="external">Computer Vision Laboratory - CVLAB</a></li><li><a href="http://media.au.tsinghua.edu.cn/people.jsp" target="_blank" rel="external">宽带网数字媒体技术实验室</a>的<a href="http://www.liuyebin.com/" target="_blank" rel="external">Yebin Liu 刘烨斌主页</a></li><li>深度图+原始彩色图像转化成多视角动态gif，<a href="http://wigglemaker.ugocapeto.com/" target="_blank" rel="external">戳这里</a>，这算是深度图像的一个小小的应用。</li></ul><h2 id="光场相机"><a href="#光场相机" class="headerlink" title="光场相机"></a>光场相机</h2><p>大家在刚刚入手光场领域的时候会用到现在的消费者用的手持光场相机Lytro或者ILLUM，如图（实验室的设备，我可买不起ILLUM）：</p><center><img src="/2017/02/16/LightField光场/lytro.jpg" alt="Lytro" title="Lytro"></center><center><img src="/2017/02/16/LightField光场/illum.jpg" alt="Illum" title="Illum"></center><h2 id="获取-LFP-or-LFR-原文件"><a href="#获取-LFP-or-LFR-原文件" class="headerlink" title="获取.LFP(or .LFR)原文件"></a>获取.LFP(or .LFR)原文件</h2><p>由Lytro拍摄的图像的原格式是.lfp格式，我们要解码成我们需要的格式。<br>工具：Lytro Desktop，MATLAB光场工具包（很强大，推荐，本文介绍该方法）。</p><p>用数据线把设备连接到电脑，打开Lytro Desktop，点击想要导入的图片，选中点击右上角立即处理，然后打开我的电脑图片-&gt;Lytro Desktop\Libraries\Lytro 图库.lytrolibrary*，就可以发现有很多文件夹名字是一串很长数字字母啥的，点击去就可以发现好几个文件，如下：</p><center><img src="/2017/02/16/LightField光场/lfp_list.png" alt="Light field files" title="Light field files"></center>raw.lfp就是我们需要的原文件，之后呢用MATLAB光场工具包转化成自己喜欢的格式，方法明天整理。## Matlab Light Field ToolBox(光场工具箱)的使用### 下载光场工具包（LFToolBox）首先下载[光场工具箱](http://cn.mathworks.com/matlabcentral/fileexchange/49683-light-field-toolbox-v0-4)并仔细阅读说明文档，根据文档把相应的数据拷贝到工具箱的文件夹下(这一步很关键，要仔细配置)。如果不想在官网下载的话我上传到了度娘的云盘链接：[链接](http://pan.baidu.com/s/1hsDo0ks) 密码：yykc。这是我修改后的一个版本，可以直接运行，推荐下载这个版本。下载下来的工具包是这样的：<center><img src="http://i1.piimg.com/4851/f42807985b8bd749.png"></center><p>LFToolbox0.4就是我们要的工具包，里面包含很多函数，如下图：</p><center><img src="http://i1.piimg.com/4851/7f9d0c3e8901603f.png" width="80%"></center><p>我把一些比较常用的函数或者文档用红色的框标注出来，其中PDF文档是该工具包的说明书。这个说明书中详细的介绍了该工具包的使用方法，我们完全可以根据该文档的介绍来实现自己想要的功能。如下是该说明书的截图：</p><center>![](https://raw.githubusercontent.com/Vincentqyw/Vincentqyw.github.io/master/images/LF_README.bmp) </center><p>同时该说明文档提供了各种函数用于从LFP文件中提取出自己需要的各种信息：白图像(white image)，Raw Image，对齐后的图像，以及颜色校正，频域滤波后的图像等。<br><del>因为时间不足没有整理的，感觉大家都对这个过程比较感兴趣，我觉得有必要写一下到底如何读取lfp、lfr、raw文件了。好了言归正传，开写。</del></p><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>建立自己的工作目录，便于文件的管理。这一步是必要的，如果建立的目录不一致，可能导致程序无法运行，这也是我当时初次用这个工具包时常常出错的地方。好了，建立这样的目录结构：</p><center><img src="http://i1.piimg.com/4851/2a2dd0599e47a8c6.png"></center><p><strong><font color="red">Sample_test</font></strong>表示我们的测试目录，里面包含了相机信息以及自己拍摄照片的图像（lfp/lfr）。<br><strong><font color="red">Cameras</font></strong> 这个目录中又包含了几个文件夹，它们分别是以“A”或者“B”开头，在其后面有一长串数字。这其实就是光场相机的serial number，我们可以从默认目录<u> c:\Users\<username>\AppData\Local\Lytro\cameras\sn- serial_number</username></u>中找到，这个数字每个相机不一样，大家根据自己的相机序列号建立自己的目录哈。”A”表示的是LYTRO系列相机，“B”表示ILLUM系列相机；以上图为例，”A303134427”文件夹下又有一个文件夹<font color="red">WhiteImages</font>，这里面放着由该相机拍摄的白图像。所谓白图像就是一张由光场相机拍摄的白色的图像，当然自己也可以拿着光场相机对着白色的墙面拍几张，但是效果并不一定很好。庆幸的是LYTRO官方提供了白图像，我们可以从以下目录找到:<u> c:\Users\ <strong>username</strong>\AppData\Local\Lytro\cameras\sn- serial_number</u>。<br>如下图：</p><center><img src="http://i1.piimg.com/4851/727c438cc80fba2f.png"></center><p> 我们发现有以下4个文件：data.C.0/1/2/3，这是官方把图像压缩成了这种格式，我们需要用工具箱进行解码。我们需要拷贝出这4个文件，放在<font color="red">WhiteImages</font>文件夹里。这一步相当关键，一定要确保拷贝对了目录。注意，Illum相机的白图像与Lytro的白图像的存放位置不一样，在相机的SD卡里。<br><strong><font color="red">Images</font></strong>文件夹下包含我们需要处理的文件们，<font color="red">F01</font>下存放LYTRO系列拍摄的文件，<font color="red">B01</font>下存放ILLUM系列拍摄的文件。经过我们上述的过程之后，最后我们的目录会变成这样（注意：<u>Sample_test与LFToolBox0.4为同级目录，各个文件夹的名字务必正确</u>）：</p><center><img src="http://i1.piimg.com/4851/a2de9efe8b57042a.png"></center><h3 id="测试开始"><a href="#测试开始" class="headerlink" title="测试开始"></a>测试开始</h3><p>我用的是实验室的电脑，配置是：<strong>Intel(R) Core(TM) i7-4790 CPU  @3.60GHz  3.60GHz RAM 16GB</strong><br>其中的Demo文件是本人编写的一小段测试代码，已经贴在了文末。接下来的过程就是RUN CODE了。程序大致可以分为以下几个测试：</p><ol><li>处理白图像</li><li>解码LFP文件</li><li>频域滤波</li><li>颜色校正</li></ol><h4 id="处理白图像"><a href="#处理白图像" class="headerlink" title="处理白图像"></a>处理白图像</h4><p>处理白图像的目的为了得到相机的某些参数，我当时是为了获得每幅光场的中心点坐标才进行的这一步。以为白图像拍摄的场景没有纹理，此时可以清楚的观察到微透镜成像的边界信息。如下图所示：</p><center><img src="http://i4.buimg.com/4851/d895be60272e517c.png" width="100%"></center><p>可以看到的是，微透镜下成像是这种正六边形的网格，类似于蜂窝的结构，感觉666。需要注意的是，该过程不是简单的提取出一张白图像来，而是提取几十张白图像对（），这个过程运行起来有点久，以下是运行的截图：</p><center> <img src="http://i1.piimg.com/4851/6861c70e4eb750a3.png" width="80%"></center><h4 id="解码LFP文件"><a href="#解码LFP文件" class="headerlink" title="解码LFP文件"></a>解码LFP文件</h4><p>如果只是单纯的读出LFP/LFR、RAW文件的数据的话可以分别用工具包提供的如下函数：LFReadLFP、LFReadRaw。注意两个函数的返回值不一样。LFReadLFP返回一个结构体类型的变量，它包含相机的各个信息，我们可以根据自己的需要保留数据。LFReadRaw返回的是一张uint16的灰度图，还没有经过demosaicing操作。去马赛克操作在malatb中有相应的函数，这点不用担心。我们在这里不是直接调用的LFReadLFP而是调用了工具箱提供的LFLytroDecodeImage函数。如果运行有问题，将LFLytroDecodeImage中的WhiteImageDatabase路径由以下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DecodeOptions = LFDefaultField( <span class="string">'DecodeOptions'</span>, <span class="string">'WhiteImageDatabasePath'</span>...</div><div class="line">,fullfile(<span class="string">'Cameras'</span>,<span class="string">'WhiteImageDatabase.mat'</span>));<span class="comment">% line 71</span></div></pre></td></tr></table></figure><p>改为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">DecodeOptions = LFDefaultField( <span class="string">'DecodeOptions'</span>, <span class="string">'WhiteImageDatabasePath'</span>...</div><div class="line"> ,fullfile(<span class="string">'Cameras'</span>,LFMetadata.SerialData.camera.serialNumber,<span class="string">'WhiteImageDatabase.mat'</span>));</div><div class="line"><span class="comment">%== 注意，这条插在  ---Select appropriate white image---上行，而不是在原来的71行修改==。</span></div></pre></td></tr></table></figure><p>经过这样的修改之后，这下应该可以跑了。我们可以得到以下图像：</p><center><img src="http://i1.piimg.com/4851/6447d8aa8eaa400f.png" width="100%"></center><p>局部放大效果图：</p><center><img src="http://i4.buimg.com/4851/dc870be41bd9c41a.png" width="100%"></center><p>所有视角的图像：</p><center><img src="http://i4.buimg.com/4851/2b43c8d2cfb3ae03.png" width="100%"></center><p>这时候可以看到在边界视角上的图像比较黑，所以我们接下来要进行频域滤波，以及颜色校正。</p><h4 id="频域滤波以及颜色校正"><a href="#频域滤波以及颜色校正" class="headerlink" title="频域滤波以及颜色校正"></a>频域滤波以及颜色校正</h4><p>这部分分别用到了LFFilt4DFFT以及LFColourCorrect函数。以LYTRO 1.0 为例子，我们得到的光场图像一种有11*11个视角，但是这个121个视角子孔径图像的质量真的不敢恭维，尤其是边角处的视角(u=1,v=1)时，这个图像时完全变成黑色的。所以嘛，LFFilt4DFFT这个函数是将这些变成黑色的图像或者质量不好的图像进行校正的，具体原理不作展开。LFColourCorrect这个函数是利用gamma变化对原始图像进行颜色校正的，这一点比较简单。总之利用这两个函数能够让我们得到的光场图像的质量更好，当然你也可以选择不用。</p><p>以下是经过滤波之后的所有子孔径图像，可以发现边界的视角相比于频域滤波之前有了很好的可视性。</p><center><img src="http://i4.buimg.com/4851/54c189a41878d481.png" width="100%"></center><p>以下是经过颜色校正之后的所有所有子孔径图像。</p><center><img src="http://i4.buimg.com/4851/e3a132bb65c60ae8.png" width="100%"></center><p>经过以上的步骤我们可以学习到白图像的处理，以及光场图像的处理等操作。当然我没有列出这个工具包所有的功能介绍，大家可以根据需要建立自己工程，对自己的数据进行测试，以上！<br>以下是Demo文件的代码，仅供学习使用。</p><p><strong><font color="red">注意</font></strong>：</p><ul><li>务必在WhiteImagesPath处写明相机型号，确定好到底是Lytro还是Illum</li><li>注意Illum相机的白图像们在相机的SD卡中，那些白图像们拷贝出来放在路径<strong>Sample_test\Cameras\B5151500510\</strong>下即可</li><li>白图像的处理过程比较久，耐心等待就行即可</li><li>Lytro与Illum的频域滤波调用函数是不同的，我已经把代码添加在了相应位置；这个函数用时较久，耐心等待</li><li>结果存放在<strong>Results_saving</strong>文件夹下</li><li>再次提醒，由于Illum图像的分辨率比较大，所以当程序运行到LFLytroDecodeImage以及频域滤波时会造成内存以及磁盘的大量使用，慎重考虑。</li><li>如有Bug请及时联系我，多谢~</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">clc;</div><div class="line">clear all;</div><div class="line">clc;</div><div class="line"></div><div class="line">addpath(genpath(<span class="string">'Sample_test'</span>));</div><div class="line">addpath(genpath(<span class="string">'LFToolbox0.4'</span>));</div><div class="line"></div><div class="line">LFMatlabPathSetup;</div><div class="line"></div><div class="line"><span class="comment">%% Step1: 解压data.C.0/1/2/3---&gt;white,结果存储在Cameras中</span></div><div class="line">fprintf(<span class="string">'===============Step1: Unpack Lytro Files===============\n\n '</span>);</div><div class="line">LFUtilUnpackLytroArchive(<span class="string">'Sample_test'</span>)</div><div class="line"></div><div class="line"><span class="comment">%% Step2: 包含刚刚解压出来的文件的目录</span></div><div class="line"></div><div class="line">fprintf(<span class="string">'===============Step2: Process WhiteImages===============\n\n'</span>);</div><div class="line"></div><div class="line">WhiteImagesPath=<span class="string">'Sample_test\Cameras\B5151500510'</span>; <span class="comment">% 务必要设置这个值 B5151500510   A303134427</span></div><div class="line">LFUtilProcessWhiteImages( WhiteImagesPath);</div><div class="line"></div><div class="line"><span class="comment">%% Step3: 解码光场图像.lfp</span></div><div class="line">fprintf(<span class="string">'=====================Step3: Decode LFP===================\n\n'</span>);</div><div class="line">cd(<span class="string">'Sample_test'</span>);  <span class="comment">% 进入Sample_test目录</span></div><div class="line"></div><div class="line">lfpname=<span class="string">'baby'</span>; <span class="comment">%测试图像名称，改成你自己的</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> WhiteImagesPath(<span class="number">21</span>)==<span class="string">'A'</span>    <span class="comment">%找到型号  exist('LYTRO','var')</span></div><div class="line">    version=<span class="string">'F01'</span>;</div><div class="line"><span class="keyword">elseif</span> WhiteImagesPath(<span class="number">21</span>)==<span class="string">'B'</span><span class="comment">%找到型号  exist('ILLUM','var')</span></div><div class="line">    version=<span class="string">'B01'</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">InputFname=[<span class="string">'Images\',version,'</span>\<span class="string">',lfpname,'</span>.lfp<span class="string">'];</span></div><div class="line"></div><div class="line">[LF, LFMetadata,WhiteImage,CorrectedLensletImage, ...</div><div class="line">WhiteImageMetadata, LensletGridModel, DecodeOptions]...</div><div class="line">                              =  LFLytroDecodeImage(InputFname);</div><div class="line">cd('..<span class="string">');</span></div><div class="line"></div><div class="line">imshow(CorrectedLensletImage) %Raw Image</div><div class="line">mkdir(['Results_saving\<span class="string">',lfpname]);</span></div><div class="line">imwrite(CorrectedLensletImage,['Results_saving\<span class="string">',lfpname,'</span>\<span class="string">',lfpname,'</span>.bmp<span class="string">']);</span></div><div class="line">save(['Results_saving\<span class="string">',lfpname,'</span>\<span class="string">',lfpname,'</span>.mat<span class="string">'],'</span>CorrectedLensletImage<span class="string">');</span></div><div class="line"></div><div class="line"></div><div class="line">%% =======================频域滤波================================</div><div class="line">%---Setup for linear filters---</div><div class="line">tic</div><div class="line">% lytro</div><div class="line">if strcmp(version,'F01<span class="string">')==1</span></div><div class="line">    LFPaddedSize = [16, 16, 400, 400];</div><div class="line">    BW = 0.03;</div><div class="line">    FiltOptions = [];</div><div class="line">    FiltOptions.Rolloff = 'Butter<span class="string">';</span></div><div class="line">    Slope1 = -3/9; % Lorikeet</div><div class="line">    Slope2 = 4/9;  % Building</div><div class="line">    fprintf('Building <span class="number">4</span>D frequency hyperfan... <span class="string">');</span></div><div class="line">    [H, FiltOptionsOut] = LFBuild4DFreqHyperfan( LFPaddedSize, Slope1, Slope2, BW, FiltOptions );</div><div class="line">    fprintf('Applying filter<span class="string">');</span></div><div class="line">    [LFFilt, FiltOptionsOut] = LFFilt4DFFT( LF, H, FiltOptionsOut );</div><div class="line"></div><div class="line">% illum</div><div class="line">elseif strcmp(version,'B01<span class="string">')==1</span></div><div class="line"></div><div class="line">    LFSize = size(LF);</div><div class="line">    LFPaddedSize = LFSize;</div><div class="line">    BW = 0.04;</div><div class="line">    FiltOptions = [];</div><div class="line">    %---Demonstrate 4D Hyperfan filter---</div><div class="line">    Slope1 = -4/15; % Lorikeet</div><div class="line">    Slope2 = 15/15; % Far background</div><div class="line">    fprintf('Building <span class="number">4</span>D frequency hyperfan... <span class="string">');</span></div><div class="line">    [H, FiltOptionsOut] = LFBuild4DFreqHyperfan( LFPaddedSize, Slope1, Slope2, BW, FiltOptions );</div><div class="line">    fprintf('Applying filter<span class="string">');</span></div><div class="line">    [LFFilt, FiltOptionsOut] = LFFilt4DFFT( LF, H, FiltOptionsOut );</div><div class="line">    title(sprintf('Frequency hyperfan filter, slopes %<span class="number">.3</span>g, %<span class="number">.3</span>g, BW %<span class="number">.3</span>g<span class="string">', Slope1, Slope2, BW));</span></div><div class="line">    drawnow</div><div class="line">    save(['Results_saving\<span class="string">',lfpname,'</span>\<span class="string">',lfpname,'</span><span class="number">5</span>D.mat<span class="string">'],'</span>LFFilt<span class="string">');</span></div><div class="line">end</div><div class="line"></div><div class="line">%% =======================颜色校正参数设置==========================                               </div><div class="line"></div><div class="line">ColMatrix = DecodeOptions.ColourMatrix;</div><div class="line">Gamma=DecodeOptions.Gamma;</div><div class="line">ColBalance=DecodeOptions.ColourBalance;</div><div class="line"></div><div class="line">% 对3280*3280的原始彩色图像进行颜色校正</div><div class="line">ColorCorrectedImage=LFColourCorrect(CorrectedLensletImage, ColMatrix, ColBalance, Gamma);</div><div class="line">imwrite(ColorCorrectedImage,['Results_saving\<span class="string">',lfpname,'</span>\<span class="string">',lfpname,'</span>ColorCorrectedImage.bmp<span class="string">']);</span></div><div class="line">save(['Results_saving\<span class="string">',lfpname,'</span>\<span class="string">',lfpname,'</span>ColorCorrectedImage.mat<span class="string">'],'</span>ColorCorrectedImage<span class="string">')</span></div><div class="line">imshow(ColorCorrectedImage);title('Corrected Lenslet Image<span class="string">');</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">%% 同样是颜色矫正， 为了得到光场数据。得到5-D LFColorCorrectedImage数据</div><div class="line">LFColorCorrectedImage=zeros(size(LF,1),size(LF,2),size(LF,3),size(LF,4),size(LF,5));</div><div class="line">for i=1:size(LF,1)</div><div class="line">    for j=1:size(LF,2)</div><div class="line">        temp =squeeze(LFFilt(i,j,:,:,1:3));</div><div class="line">        temp = LFColourCorrect(temp, ColMatrix, ColBalance, Gamma);</div><div class="line">        LFColorCorrectedImage(i,j,:,:,1:3)=temp;</div><div class="line">        imshow(temp);</div><div class="line">        pause(0.1)</div><div class="line">    end</div><div class="line">end</div><div class="line">LFColorCorrectedImage(:,:,:,:,4)=LF(:,:,:,:,4);</div><div class="line">save(['Results_saving\<span class="string">',lfpname,'</span>\<span class="string">',lfpname,'</span>RawLFColorCorrectedImage.mat<span class="string">'],'</span>LFColorCorrectedImage<span class="string">');% very important</span></div><div class="line"></div><div class="line">toc</div><div class="line">%--------------------------------------------------------------------------------</div></pre></td></tr></table></figure><hr><h2 id="Lytro官网可视化工具"><a href="#Lytro官网可视化工具" class="headerlink" title="Lytro官网可视化工具"></a>Lytro官网可视化工具</h2><p>谁让人家Lytro不开源呢，人家自己做的Demo还不错。通过鼠标就可以对以下图像进行<strong>重聚焦，变化视角，以及缩放</strong>等操作。话不多说，上图！</p><center><iframe width="600" height="434" src="https://pictures.lytro.com/89268543555/pictures/1083179/embed" frameborder="0" allowfullscreen scrolling="no"></iframe></center><center><iframe width="600" height="434" src="https://pictures.lytro.com/michaelsternoffphoto/pictures/1030057/embed" frameborder="0" allowfullscreen scrolling="no"></iframe></center><center><iframe width="600" height="434" src="https://pictures.lytro.com/karinaguillenphoto/pictures/926574/embed" frameborder="0" allowfullscreen scrolling="no"></iframe></center><center><iframe width="600" height="434" src="https://pictures.lytro.com/karinaguillenphoto/pictures/1004450/embed" frameborder="0" allowfullscreen scrolling="no"></iframe></center><p>更多图像在<a href="https://pictures.lytro.com/" target="_blank" rel="external">这里</a>。</p><p>日常来首歌曲：</p><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="600" height="86" src="http://music.163.com/outchain/player?type=2&id=33538955&auto=0&height=66"></iframe></center>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2017/02/16/LightField光场/lf_cover.jpg&quot; alt=&quot;Magic Leap&quot; title=&quot;Magic Leap&quot;&gt;&lt;/center&gt;

&lt;p&gt;这里我汇总了有关光场（Light Field）一些有用的链接以及光场数据的处理过程。目前还在整理中，随时更新。&lt;br&gt;&lt;span id=&quot;inline-red&quot;&gt;声明&lt;/span&gt;：一切理解都是本人观点，如有错误，还望指出。如需转载请与本人联系，谢谢合作！邮箱：&lt;a href=&quot;mailto:qin123yw@163.com&quot;&gt;qin123yw@163.com&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Light Field" scheme="https://www.vincentqin.tech/tags/Light-Field/"/>
    
      <category term="Matlab光场工具包" scheme="https://www.vincentqin.tech/tags/Matlab%E5%85%89%E5%9C%BA%E5%B7%A5%E5%85%B7%E5%8C%85/"/>
    
      <category term="光场" scheme="https://www.vincentqin.tech/tags/%E5%85%89%E5%9C%BA/"/>
    
      <category term="计算成像" scheme="https://www.vincentqin.tech/tags/%E8%AE%A1%E7%AE%97%E6%88%90%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>Matlab相关问题汇总</title>
    <link href="https://www.vincentqin.tech/2017/01/16/Matlab%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>https://www.vincentqin.tech/2017/01/16/Matlab相关问题汇总/</id>
    <published>2017-01-16T02:43:01.000Z</published>
    <updated>2017-04-15T09:17:39.465Z</updated>
    
    <content type="html"><![CDATA[<center><img src="http://www.vincentqin.tech/2017/01/16/Matlab%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/matlab.jpg" width="100%"></center><p>以下是我在使用Matlab编程时遇到的问题以及解决方法，最后彩蛋随时补充。</p><a id="more"></a><h2 id="Matlab-写入Excel错误"><a href="#Matlab-写入Excel错误" class="headerlink" title="Matlab 写入Excel错误"></a>Matlab 写入Excel错误</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><blockquote><p>Matlab 在创建EXCEL文件的时候总是出错，即使使用MATLAB自带的程序。 问题描述：在Matlab中使用xlswrite函数时，如果excel文件存在时，则程序能够正常运行；当excel文件不存在时，则会出现错误：</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Error using xlswrite (line <span class="number">220</span>) Error: 服务器出现意外情况。</div></pre></td></tr></table></figure><p>问题解决：xlswrite函数在调用时会占用Excel的com端口，所以要保证在调用时这个端口是开放的，也就是没有被其他程序占用。打开任意一个Excel（我的是16版）文档，点击<strong>文件</strong>—<strong>选项</strong>，弹出Excel选项卡，在<strong>加载项</strong>中可以看到，活动应用程序加载项，以及非活动应用程序加载项；<br>由于我的系统中装了一个福昕阅读器，该程序占用了Excel的com端口，所以当Matlab再去调用这个端口时就会出现异常。具体解决方法：点击管理旁边的下拉菜单，选择COM加载项，点击转到，把福昕阅读器的前面的勾去掉，然后确定。<center>![这里写图片描述](http://img.blog.csdn.net/20160628202102846)![这里写图片描述](http://img.blog.csdn.net/20160628202117268)</center></p><h2 id="Matlab设置绘图坐标轴信息"><a href="#Matlab设置绘图坐标轴信息" class="headerlink" title="Matlab设置绘图坐标轴信息"></a>Matlab设置绘图坐标轴信息</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><blockquote><p>Matlab 作图时更改纵轴刻度为科学计数法，指数放在框左上方</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">plot([<span class="number">0</span> <span class="number">1</span>],[<span class="number">0</span> <span class="number">.02</span>]) <span class="comment">% 作图，换成自己的图像就可以~</span></div><div class="line">oldLabels = str2num(get(gca,<span class="string">'YTickLabel'</span>));</div><div class="line">scale = <span class="number">10</span>^<span class="number">2</span>;newLabels = num2str(oldLabels*scale);</div><div class="line">set(gca,<span class="string">'YTickLabel'</span>,newLabels,<span class="string">'units'</span>,<span class="string">'normalized'</span>);</div><div class="line">posAxes = get(gca,<span class="string">'position'</span>);</div><div class="line">textBox = annotation(<span class="string">'textbox'</span>,<span class="string">'linestyle'</span>,<span class="string">'none'</span>,<span class="string">'string'</span>,[<span class="string">'x 10\it^&#123;'</span> sprintf(<span class="string">'%d'</span>,log10(<span class="number">1.</span>/scale)) <span class="string">'&#125;'</span>]);</div><div class="line">posAn = get(textBox,<span class="string">'position'</span>);</div><div class="line">set(textBox,<span class="string">'position'</span>,[posAxes(<span class="number">1</span>) posAxes(<span class="number">2</span>)+posAxes(<span class="number">4</span>) posAn(<span class="number">3</span>) posAn(<span class="number">4</span>)],<span class="string">'VerticalAlignment'</span>,<span class="string">'cap'</span>);</div></pre></td></tr></table></figure><ul><li>今天学到一个特别简单的语句，删除元胞数组中空元素： <strong>a(cellfun(@isempty,a))=[]</strong>；（2016.05.19）</li></ul><h2 id="Matlab显示图片错误"><a href="#Matlab显示图片错误" class="headerlink" title="Matlab显示图片错误"></a>Matlab显示图片错误</h2><h3 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h3><blockquote><p>MATLAB图像显示总是白色</p></blockquote><p>  imshow是一个很强大的”武器”，显示图像简直无所不能，但这其中往往会出现问题。在处理图像时，我们的图像经常是经过了某种运算，为了保证其精度，系统会自动的将uint8型数据类型转化成double型。</p><p>   “如果直接运行imshow(I)，我们会发现显示的是一个白色的图像。这是因为imshow()显示图像时对double型是认为在0~1范围内，即大于1时都是显示为白色，而imshow显示uint8型时是0~255范围。而经过运算的范围在0-255之间的double型数据就被不正常得显示为白色图像了。<br>   ”</p><h3 id="解决之道"><a href="#解决之道" class="headerlink" title="解决之道"></a>解决之道</h3><ul><li>可以利用mat2gray()函数，这个函数是归一化函数，可以把数据归一化到0-1之间，再用imshow()就可以了；</li><li>或者对于一个处理后的黑白图像Img，若为double型可以这样写：imshow(Img/max(Img(:)))；</li><li>还有一种就是：imshow(Img,[]);就是加一个[]，即可以自动调整显示；</li></ul><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><ul><li>大神教我们怎么画图，#MATLAB无所不能#，<a href="http://blogs.mathworks.com/graphics/" target="_blank" rel="external">戳戳这里</a>~</li><li>Matlab 字体困扰了我很长时间，终于在网上找到了一个比较好的组合，<a href="http://pan.baidu.com/s/1geIRi2R" target="_blank" rel="external">猛戳这里</a>！<a href="http://blog.csdn.net/whoispo/article/details/50383362" target="_blank" rel="external">原文地址</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;http://www.vincentqin.tech/2017/01/16/Matlab%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/matlab.jpg&quot; width=&quot;100%&quot;&gt;&lt;/center&gt;

&lt;p&gt;以下是我在使用Matlab编程时遇到的问题以及解决方法，最后彩蛋随时补充。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Matlab" scheme="https://www.vincentqin.tech/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>AR形势与应用</title>
    <link href="https://www.vincentqin.tech/2016/08/09/AR%E5%BD%A2%E5%8A%BF%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>https://www.vincentqin.tech/2016/08/09/AR形势与应用/</id>
    <published>2016-08-09T04:37:42.000Z</published>
    <updated>2017-05-07T15:40:26.593Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2016/08/09/AR形势与应用/AR.jpg" alt="AR.jpg" title=""></center><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p id="div-border-left-red">当前，微软、谷歌、苹果、Facebook 等 IT 巨头都在布局虚拟现实Virtual Reality简称 VR）虚拟现实也许是下一个颠覆人类生活的新技术之一。增强现实Augmented Reality简称 AR）是虚拟现实技术的延伸它可以用来模拟对象让学习者在现实环境背景中看到虚拟生成的模型对象 而且这一模型可以快速生成、操纵和旋转。</p><a id="more"></a><h2 id="1．增强现实公司分类"><a href="#1．增强现实公司分类" class="headerlink" title="1．增强现实公司分类"></a>1．增强现实公司分类</h2><p>Augmented reality增强现实创业的公司大致可以分成如下几种公司类型[1]。（以下是翻译的国外网站的内容）</p><ul><li>AR平台公司（AR platform companies）。<br>这些公司为开发者提供底层的开发工具，以便于开发者能够创造更多更加高级的AR解决方案。这样的公司有：Qualcomm Vuforia, METAIO’s SDK, TotalImmersion。</li><li>AR产品和游戏公司。<br>这些公司主营自己独家AR零售产品例如：书籍、游戏。包括如下公司：Sphero, POPAR, Sony, Microsoft 以及 Nintendo。</li><li>自助DIY AR公司以及通用AR查看器。<br>这些公司专为快速简单的AR体验或活动而设计，提供内容管理工具和基本AR效果菜单。借助自助AR工具，精通技术的个人可以创建简单的体验，例如发布单个视频或简单的动画。AR自助服务公司非常适合发布商，教育工作者，学生和其他想要测试或创建简单的增强现实体验的用户，而无需投资于完全定制的品牌应用体验。一些DIY公司还提供AR查看器，定制服务和白标签选项。这个领域的公司包括Layar，Aurasma，DAQRI和Zappar。</li><li>定制品牌应用开发公司。<br>这些公司直接与品牌营销人员和机构合作，主要为的广告活动、贸易展览和现场活动构建定制的增强现实解决方案。自定义品牌应用程序允许营销人员结合独一无二的定制增强现实体验与个性化服务和项目管理。自定义功能通常包括品牌规格，导航，用户界面，动画，复杂或大规模的AR效果等。服务可以包括3D建模，与其他软件服务或电子商务平台的集成，游戏开发，基于位置的安装，通知，复杂动画，微位置或其他高级AR效果。这个领域的公司包括Appshaker，GravityJack和Marxent。</li><li>行业特定的垂直AR解决方案（Industry-specific vertical AR solutions）。<br>最新出现的AR公司类别是那些提供AR解决方案的专业服务公司，专为服务于专业领域。如奢侈品零售，医疗服务，工业应用，制药公司和化妆品公司。这个领域的公司包括用于广告的Blippar，用于豪华珠宝零售的Holition，用于家具布置的Adornably以及用于消费零售，工业和企业销售工具的Marxent的VisualCommerce®。</li></ul><p>做个不恰当的比喻，我觉得AR是VR的一个延伸，只是把VR的场景换成了现实场景，眼镜换成了透明的。</p><h2 id="2．可行性分析"><a href="#2．可行性分析" class="headerlink" title="2．可行性分析"></a>2．可行性分析</h2><p>一个良好的AR体验，大致可以分成一下几个方面：</p><ul><li>1．    3D眼镜；这应该是VR或者AR最为重要的一部分；</li><li>2．    手柄；可以代替人手去操纵，在一定程度上增加了使用的灵活性。（但我觉得未来手柄一定会被淘汰，因为这只是人手不能被充分利用的代替手段）。</li><li>3．    3D显示屏幕，它可以跟踪用户的头的转动和手的动作，实时调整所看到的3D图像，并允许用户操控一些虚拟物体，就好比他们真正存在。</li><li>4．    待补充</li></ul><h3 id="技术难点"><a href="#技术难点" class="headerlink" title="技术难点"></a>技术难点</h3><p>VR得益于三维游戏的发展，而AR收益于影视领域的跟踪技术（video tracking）的发展。从技术门槛的角度来说，VR、AR和移动端重合的技术有：显示器、运动传感器、处理器、储存、记忆、无线连接等。在硬件上，这些都不是技术难点。<br>VR、AR的难点都在感知和显示，感知是一种映射，VR 映射的是一个lighthouse的空间或者PS camera mapping的一个交叉；在显示上，VR如何精准地匹配用户的头部产生相应的画面，AR则在这基础上算出光照、遮挡等情况并让图像通透不干扰现实中的视线。<br>而VR硬件的难点在于光学的镜片技术和位置追踪技术（SLAM），因为以前的移动端不涉及这些技术。AR的软件难点在于：1、定位相机；2、恢复场景的三维结构。通常情况下，这一技术被称作SLAM（Simultaneous Localization And Mapping）。当然还有一些其他的技术诸如：图像追踪、云端视觉搜索、人脸和表情追踪等。</p><p>目前国内外已经有多家技术公司提供了软件开发方面的AR解决方案和工具，使得全球众多开发者参与到AR应用开发中来。开发者不需要自己搭建系统架构，也不用理解底层SDK复杂的实现方式，只需要将AR模块嵌入到已有的业务逻辑中，就可以通过现成的开源代码或者平台工具，设计并开发属于自己的AR软件产品。就这个层面来讲技术是可以实现的，但就某一个特殊领域的实现方式可能有所差别。</p><h3 id="技术支持"><a href="#技术支持" class="headerlink" title="技术支持"></a>技术支持</h3><p>Metaio 是由德国大众的一个项目衍生出来的一家虚拟现实初创公司，现已被苹果公司收购。 专门从事增强现实和机器视觉解决方案，产品主要包括Metaio SDK 和 Metaio Creator。 Metaio SDK 支持移动设备的AR应用开发，它在内部提供增强现实显示组件ARView，该组件将摄像机层、3D 空间计算以及POI信息的叠加等功能全部封装在一起，用户在使用增强现实功能时，只需要关注用户操作的监听器即可，摄像机层、3D 空间计算、图形识别以及空间信息叠加等逻辑，完全由ARView组件自己处理 。Metaio Creator相对Metaio SDK 来说，使用门槛更低，用户无需掌握移动开发技术，就可以通过 Metaio Creator 用户图形接口中简单的点击、拖拽、拉伸等方式，控制软件中组件的功能，以构建出自己的增强现实结果。（但是被苹果收购了，目前不提供服务）<br>Wikitude 是由美国 Mobilizy 公司于 2008 年秋推出的一款移动增强现实开发平台， 支持 Android、 iOS、Black Berry 以及 Windows Phone 多个手机智能操作系统Wikitude SDK 是一款优秀的增强现实开发工具包， 它能够帮助开发人员减小增强现实应用程序开发的复杂性。 目前，Wikitude SDK 支持载入真实的物理环境向 AR 环境中添加虚拟物体、支持用户与虚拟物体的交互、响应用户的位置变化、AR 环境中信息提示、从本地或网络加载资源等功能。<br><img src="http://www.wikitude.com/wp-content/uploads/2016/04/160405_WT_HomeSlider_Image_3D-Tracking.png" alt="图一Wikitude 官网界面"><br>图一Wikitude 官网界面</p><p>ENTiTi Creator是由以色列一家创业公司 Waking App 开发的一款 AR 作品制作工具，易学易用是它的最大特色。用户可以使用ENTiTi平台上传图片和视频以及相应的动作指令， 并通过简单的逻辑串联，就可以轻松创建出包含3D图像、动画或者游戏的AR/VR 内容。该平台不需要任何编程、完全依靠鼠标拖放就能完成整个创建过程。EN-TiTi是基于云计算的平台，可以在线 3D 视角查看内容，并自动适配各种终端，比如，手机或平台电脑、三星 Gear VR 盒子、Vuzix 智能眼镜等。开发者通过它所发布出来的AR内容，只需要通过一个叫作 EN-TiTi View 软件的入口，就可以轻松访问。 这意味着全球所有开发者所开发出的成千上万的 AR 内容，只需要一个软件即可全部浏览。<br><img src="http://i1.piimg.com/567571/4738bb1d449bd227.jpg" alt=""></p><center><embed src=".././images/realmax.jpg"></center><p>图二ENTiTi Creator 官网介绍</p><p>Realmax公司是一个国际化AR生态级企业，在上海、香港、纽约、慕尼黑都设立了分公司，并建立了5个全球实验室，完成了硬件量产、软件算法、应用开发和内容制作的AR技术储备，AR操作系统“Realcast”也有可观的用户量，在工业、幼教、电商、旅游等领域积累了大量客户，是AR领域唯一的一家完成“平台+内容+终端+应用”生态链布局的企业。<br><img src="http://i1.piimg.com/567571/f4e18a5fdef099fb.jpg" alt=""><br>图三 Realmax公司官网主页</p><p>根据以上分析，如果想完成某一个特定的AR或者VR应用，可以使用上述公司提供的SDK，在一定程度上会加快开发速度。</p><hr><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>1．    增强现实公司类型：<a href="http://www.marxentlabs.com/augmented-reality-company-primer-5-types-augmented-reality-companies/" target="_blank" rel="external">http://www.marxentlabs.com/augmented-reality-company-primer-5-types-augmented-reality-companies/</a><br>2．    Metaio公司主页：<a href="http://www.metaio.eu/" target="_blank" rel="external">http://www.metaio.eu/</a><br>3．    AR技术举例以及现有公司介绍：<a href="http://www.marxentlabs.com/what-is-virtual-reality-definition-and-examples/。" target="_blank" rel="external">http://www.marxentlabs.com/what-is-virtual-reality-definition-and-examples/。</a><br>4．    Layer公司AR开发SDK：<a href="https://www.layar.com/solutions/#sdk" target="_blank" rel="external">https://www.layar.com/solutions/#sdk</a><br>5．    Wikitude官网：<a href="http://www.metaio.eu/index.html" target="_blank" rel="external">http://www.metaio.eu/index.html</a><br>6．    ENTiTi Creator 官网：<a href="http://www.wakingapp.com/" target="_blank" rel="external">http://www.wakingapp.com/</a><br>7．    Realmax公司官网：<a href="http://www.realmax.com/或者http://www.realmax.com.hk/" target="_blank" rel="external">http://www.realmax.com/或者http://www.realmax.com.hk/</a></p><!-- more -->]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2016/08/09/AR形势与应用/AR.jpg&quot; alt=&quot;AR.jpg&quot; title=&quot;&quot;&gt;&lt;/center&gt;

&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p ID=&quot;div-border-left-red&quot;&gt;当前，微软、谷歌、苹果、Facebook 等 IT 巨头都在布局虚拟现实Virtual Reality简称 VR）虚拟现实也许是下一个颠覆人类生活的新技术之一。增强现实Augmented Reality简称 AR）是虚拟现实技术的延伸它可以用来模拟对象让学习者在现实环境背景中看到虚拟生成的模型对象 而且这一模型可以快速生成、操纵和旋转。&lt;/p&gt;
    
    </summary>
    
    
      <category term="AR" scheme="https://www.vincentqin.tech/tags/AR/"/>
    
  </entry>
  
  <entry>
    <title>HEXO建站备忘录</title>
    <link href="https://www.vincentqin.tech/2016/08/09/HEXO%E5%BB%BA%E7%AB%99%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>https://www.vincentqin.tech/2016/08/09/HEXO建站备忘录/</id>
    <published>2016-08-09T04:37:42.000Z</published>
    <updated>2017-05-20T08:03:40.535Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2016/08/09/HEXO建站备忘录/hexo.png" alt="hexo.png" title=""></center><p><strong>Hexo</strong>作为建立Blog利器，为我们没有JS基础的小白们提供了建立专属自己博客的机会！经常使用的语法很简单，我们完全可以在10min分钟之内建立自己的Blog，后期的优化才是最耗费时间的。好了，直接进入正文。</p><a id="more"></a><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">hexo clean    # 清除缓存，简写 hexo c</div><div class="line"></div><div class="line">hexo generate # 作用：建立静态页面， 简写 hexo g </div><div class="line"></div><div class="line">hexo deploy   # 部署自己的blog，本人部署在了Git上，简写 hexo d</div><div class="line"></div><div class="line">hexo server   # 以启动本地服务， 可预览，简写 hexo s</div><div class="line"></div><div class="line">hexo new blog_name #　新建以blog_name为名的blog</div><div class="line"></div><div class="line">在.md文档中加入 &lt;!-- more --&gt; 可以显示“阅读全文”</div></pre></td></tr></table></figure><h2 id="显示文章阅读数量"><a href="#显示文章阅读数量" class="headerlink" title="显示文章阅读数量"></a>显示文章阅读数量</h2><p>另外：<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="external">显示文章阅读量</a>， 服务主要用了<a href="https://leancloud.cn/" target="_blank" rel="external">LeanCloud</a>服务提供商</p><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p><a href="http://www.arao.me/" target="_blank" rel="external">Make the theme more beautiful, recommended</a></p><p>Plus: 我使用的是<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">Next</a>主题</p><h2 id="关于多说"><a href="#关于多说" class="headerlink" title="关于多说"></a>关于多说</h2><p>多说已死，评论系统转到了Disqus，但是被墙的事实让人感觉不爽。我觉得吧，这样也好。能够翻墙的人总会发现不一样的世界，可能我们属于爱折腾的人吧。</p><h2 id="关于旋转头像"><a href="#关于旋转头像" class="headerlink" title="关于旋转头像"></a>关于旋转头像</h2><p>把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果，参考这里，具体修改文件的位置是..\hexo\themes\next\source\css_common\components\sidebar\sidebar-author.styl中的内容如下</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">.site-author-image &#123;</div><div class="line">  display: block;</div><div class="line">  margin: 0 auto;</div><div class="line">  max-width: 96px;</div><div class="line">  height: auto;</div><div class="line">  border: 2px solid #333;</div><div class="line">  padding: 2px;</div><div class="line"></div><div class="line">  /* start*/</div><div class="line">  border-radius: 50%</div><div class="line">  webkit-transition: 1.4s all;</div><div class="line">  moz-transition: 1.4s all;</div><div class="line">  ms-transition: 1.4s all;</div><div class="line">  transition: 1.4s all;</div><div class="line">  /* end */</div><div class="line">&#125;</div><div class="line">/* start */</div><div class="line">.site-author-image:hover &#123;</div><div class="line">  background-color: #55DAE1;</div><div class="line">  webkit-transform: rotate(360deg) scale(1.1);</div><div class="line">  moz-transform: rotate(360deg) scale(1.1);</div><div class="line">  ms-transform: rotate(360deg) scale(1.1);</div><div class="line">  transform: rotate(360deg) scale(1.1);</div><div class="line">&#125;</div><div class="line">/* end */</div></pre></td></tr></table></figure><h2 id="背景动画设置"><a href="#背景动画设置" class="headerlink" title="背景动画设置"></a>背景动画设置</h2><p>其实NEXT主题已经自带了几种动画了，我用的是three_waves；但是呢，存在一个问题就是因为Blog背景是透明的，这样文字和背景动画就有重叠效果了，很不方便阅读，这时把背景色设置为白色即可。添加<strong>background: white</strong>到如下路径<strong>E:\Blog-new\themes\next\source\css_schemes\Muse_layout.styl</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.header-inner, .container .main-inner, .footer-inner &#123;</div><div class="line">  background: white;</div><div class="line">  +mobile() &#123; width: auto; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>重新编译即可。</p><h2 id="MarkDown编辑器"><a href="#MarkDown编辑器" class="headerlink" title="MarkDown编辑器"></a>MarkDown编辑器</h2><p>推荐<strong>Haroopad</strong></p><center><img src="/2016/08/09/HEXO建站备忘录/100.png" alt="Haroopad" title="Haroopad"></center><h2 id="插入图片以及PDF文档"><a href="#插入图片以及PDF文档" class="headerlink" title="插入图片以及PDF文档"></a>插入图片以及PDF文档</h2><ol><li><p>利用js嵌入图片</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;img src= image_path alt=<span class="string">"Lytro相机"</span> width=<span class="string">"100%"</span>&gt;</div><div class="line">&lt;center&gt;Lytro&lt;/center&gt;</div></pre></td></tr></table></figure><p> 注意以上的<code>image_path</code>既可以是图床中的路径，亦可以把图片放在<code>source/images/</code>文件下，然后<code>image_path=/images/logo.png</code>，当然也可以如下插入图片，更加方便。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](<span class="regexp">/images/</span>logo.png)</div></pre></td></tr></table></figure></li><li><p>利用插件，以下我在Github上找到的别人已经做好的一个小公举。</p></li></ol><ul><li><p>安装 <a href="https://github.com/timnew/hexo-tag-asset-res" target="_blank" rel="external">hexo-tag-asset-res</a></p><p>  打开Git Shell, 在Hexo根目录下, 输入如下代码</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-tag-asset-res --save</div></pre></td></tr></table></figure></li><li><p>修改Hexo根目录下_config.yml文件</p><p>  打开Hexo根目录, 找到_config.yml文件, 用任何一个文本编辑器打开, 找到如下代码</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">post_asset_folder: <span class="literal">false</span></div></pre></td></tr></table></figure></li><li><p>测试插入</p></li></ul><center><img src="/2016/08/09/HEXO建站备忘录/1.jpg" alt="林青霞" title="林青霞"></center><h2 id="在博客中插入网易云音乐"><a href="#在博客中插入网易云音乐" class="headerlink" title="在博客中插入网易云音乐"></a>在博客中插入网易云音乐</h2><p>我们可以利用网易云提供的代码直接在markdown文档里面插入。</p><ul><li>在网页上找到你想要播放的音乐，如下图：<img src="/2016/08/09/HEXO建站备忘录/wangyiMusic.png" alt="wangyiMusic.png" title=""></li></ul><ul><li>点击<strong>生成外链播放器</strong><img src="/2016/08/09/HEXO建站备忘录/wangyiMusicCode.png" alt="wangyiMusicCode.png" title=""></li></ul><p>注意自动播放，以及音乐播放器的大小可调。</p><ul><li>在Markdown文档里插入如下代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;center&gt;&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=500 height=86 src</div><div class="line">="http://music.163.com/outchain/player?type=2&amp;id=29722263&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;&lt;/center&gt;</div></pre></td></tr></table></figure><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="500" height="86" src="http://music.163.com/outchain/player?type=2&id=29722263&auto=0&height=66"></iframe></center>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2016/08/09/HEXO建站备忘录/hexo.png&quot; alt=&quot;hexo.png&quot; title=&quot;&quot;&gt;&lt;/center&gt;


&lt;p&gt;&lt;strong&gt;Hexo&lt;/strong&gt;作为建立Blog利器，为我们没有JS基础的小白们提供了建立专属自己博客的机会！经常使用的语法很简单，我们完全可以在10min分钟之内建立自己的Blog，后期的优化才是最耗费时间的。好了，直接进入正文。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://www.vincentqin.tech/tags/hexo/"/>
    
      <category term="博客" scheme="https://www.vincentqin.tech/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="多说" scheme="https://www.vincentqin.tech/tags/%E5%A4%9A%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 学习</title>
    <link href="https://www.vincentqin.tech/2016/08/08/Markdown%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.vincentqin.tech/2016/08/08/Markdown学习/</id>
    <published>2016-08-08T14:10:22.000Z</published>
    <updated>2017-09-22T08:39:54.310Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2016/08/08/Markdown学习/i-love-markdown.png" alt="i-love-markdown.png" title=""></center><p>本文涉及学习Markdown文本标记语言的一些练习笔记。</p><a id="more"></a><h1 id="插入不同颜色的字体"><a href="#插入不同颜色的字体" class="headerlink" title="插入不同颜色的字体"></a>插入不同颜色的字体</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=LimeGreen&gt;&lt;font color=white size=3&gt;我是白色的字体，背景是色的~&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</div></pre></td></tr></table></figure><table><tr><td bgcolor="LimeGreen"><font color="white" size="3">我是白色的字体，背景是色的~</font></td></tr></table><table><tr><td bgcolor="SpringGreen"><font color="white" size="3">我是白色的字体，背景是深灰色的~</font></td></tr></table><table><tr><td bgcolor="LightSeaGreen"><font color="white" size="3">我是白色的字体，背景是浅海绿的~</font></td></tr></table><table><tr><td bgcolor="#0099ff"><font color="white" size="3">我是白色的字体，背景是蓝色的~</font></td></tr></table><table><tr><td bgcolor="Silver"><font color="white" size="3">我是白色的字体，背景是银色的~</font></td></tr></table><table><tr><td bgcolor="DarkGray"><font color="white" size="3">我是白色的字体，背景是淡灰色的~</font></td></tr></table><table><tr><td bgcolor="DimGray"><font color="white" size="3">我是白色的字体，背景是深灰色的~</font></td></tr></table> <p>Ref: <a href="http://blog.csdn.net/testcs_dn/article/details/45719357/" target="_blank" rel="external">颜色</a></p><h1 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a>插入代码</h1><p>这里是代码区域</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">% The following is the Matlab Code</span></div><div class="line"></div><div class="line"><span class="comment">% I want to see the result</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span><span class="params">()</span></span></div><div class="line"></div><div class="line">temp=<span class="built_in">zeros</span>(<span class="number">5</span>,<span class="number">6</span>);</div><div class="line"></div><div class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">size</span>(temp,<span class="number">1</span>)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="built_in">size</span>(temp,<span class="number">2</span>)</div><div class="line"></div><div class="line">        temp(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="built_in">rand</span>(<span class="number">1</span>);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> temp(<span class="built_in">i</span>,<span class="built_in">j</span>)&gt;<span class="number">0.5</span></div><div class="line"></div><div class="line">            temp(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">1</span>;</div><div class="line"></div><div class="line">        <span class="keyword">end</span></div><div class="line"></div><div class="line">    <span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">return</span> temp</div></pre></td></tr></table></figure><h2 id="插入标题"><a href="#插入标题" class="headerlink" title="插入标题"></a>插入标题</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># 一级标题</div><div class="line"></div><div class="line">## 二级标题</div><div class="line"></div><div class="line">### 三级标题</div><div class="line"></div><div class="line">#### 四级标题</div><div class="line"></div><div class="line">##### 五级标题</div><div class="line"></div><div class="line">###### 六级标题</div></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">- 文本<span class="number">1</span></div><div class="line"></div><div class="line">- 文本<span class="number">2</span></div><div class="line"></div><div class="line">- 文本<span class="number">3</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="number">1.</span> 文本一</div><div class="line"></div><div class="line"><span class="number">2.</span> 文本二</div><div class="line"></div><div class="line"><span class="number">3.</span> 文本三</div></pre></td></tr></table></figure><ul><li><p>文本1</p></li><li><p>文本2</p></li><li><p>文本3</p></li></ul><ol><li><p>文本一</p></li><li><p>文本二</p></li><li><p>文本三</p></li></ol><h2 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](http:<span class="comment">//pic1.win4000.com/wallpaper/0/54cae8e69ac8b.jpg)</span></div></pre></td></tr></table></figure><center><img src="http://pic1.win4000.com/wallpaper/0/54cae8e69ac8b.jpg" width="100%"></center><p>&lt;/br&gt;</p><p>或者：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;center&gt;&lt;img src="http://i2.wp.com/posturemag.com/online/wp-content/uploads/2015/07/Kaz7.jpg" width="100%" &gt;&lt;/center&gt;</div></pre></td></tr></table></figure></p><center><img src="http://i2.wp.com/posturemag.com/online/wp-content/uploads/2015/07/Kaz7.jpg" width="100%"></center><h1 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h1><ul><li>segmentfault上的一个<a href="https://segmentfault.com/markdown" target="_blank" rel="external">Markdown学习手册</a></li><li>有道云笔记的Markdown<a href="http://note.youdao.com/iyoudao/?p=2411" target="_blank" rel="external">学习指南-基础篇</a></li><li><a href="http://iissnan.com/progit/" target="_blank" rel="external">Git学习手册</a></li></ul><h1 id="插入公式"><a href="#插入公式" class="headerlink" title="插入公式"></a>插入公式</h1><p>Hexo文档使用Markdown语言对文档进行编辑，Hexo自身对公式可以进行渲染但是效果不佳，我们采用的是mathjax对Markdown中的公式进行渲染。<br>首先<a href="http://2wildkids.com/2016/10/06/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86Hexo%E5%92%8CMathJax%E7%9A%84%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/#小结" target="_blank" rel="external">修复Hexo与mathjax之间的渲染冲突</a>，然后可以参考mathjax的<a href="http://mlworks.cn/posts/introduction-to-mathjax-and-latex-expression/" target="_blank" rel="external">说明文档</a>编辑公式。</p><p><a href="http://www.mohu.org/info/lshort-cn.pdf" target="_blank" rel="external">一个关于Latex不短的介绍</a><br><a href="http://www.mohu.org/info/symbols/symbols.htm" target="_blank" rel="external">Latex常用命令摘录</a></p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2016/08/08/Markdown学习/i-love-markdown.png&quot; alt=&quot;i-love-markdown.png&quot; title=&quot;&quot;&gt;&lt;/center&gt;

&lt;p&gt;本文涉及学习Markdown文本标记语言的一些练习笔记。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Markdown" scheme="https://www.vincentqin.tech/tags/Markdown/"/>
    
      <category term="资料" scheme="https://www.vincentqin.tech/tags/%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
</feed>
